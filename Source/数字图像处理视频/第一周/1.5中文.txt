我们将要讨论如何在计算机中表示图像 如何在计算机中表示彩色图像 以及如何在计算机中表示视频 还有很重要的采样、表示和量化的概念 我们非常容易地就可以想到 我们一般通过照相机拍摄的图像 但是请记住 我们在这里看到的和我们之前视频中提到的 我们所熟悉的图像仅仅是 我们能够在电磁波谱上 在不同的波长、以不同的方式所获取的图像的非常小的一部分 量化的概念在一定程度上是和那些方式相关的 我们总是要进行采样 我们总要进行量化 但再提一次 最好在脑海中留着这个念头 当我们谈论这些不同的想法时 要如何将这些想法 应用到我们最为熟悉的由数码相机所拍摄的图片上 所以 基本思路是这样的 光线被物体反射 并进入照相机 同时 在照相机里面我们有传感器 如同在这里看到的那样 记住 在我们的眼睛里有视网膜 视网膜上有视锥细胞和视杆细胞 那些就是传感器 在数码相机中 我们有传感器 它们的功能和我们眼睛里的传感器是一样的 所以 这仅仅是一个传感器的例子 能量进来后 有滤波器 然后 这些能量被接受和传输 因此 能量被感知然后被传输 通常 在一个普通的相机里 我们有一个二维的传感器矩阵 这里的每一个都是一个传感器 通常 正如我们看到的 它们以正方形或长发形的形式排列 因此 我们实际上得到了离散值 当我们去购买相机时 我们会听到这是 1,000 x 1,000 我们要多谈一会儿这个 这意味着 我们在这个方向上有1,000个传感器 这个方向上也有1,000个传感器 共有1,000的平方这么多个传感器 所以 再次说明 物体反射的光投射进照相机 并被相机所感知 但所有的过程都要经过离散化这一步 你们中的一些人可能比其他人更熟悉离散化 上过数字信号处理这门课的同学 已经了解了模数转换器 (AD converter) 这部分对你们而言会 非常简单而熟悉 但让我们为了那些不熟悉这些概念的同学 复习一下这些 所以 我们可以看到这儿发出光 光线由物体反射 并进入到传感器件之中 想想你的数码相机 因此 这是后面这个成像的放大 它看起来 这个物体在空间中是连续的 任何物体都是连续的 但我们实际上得到的是 离散化表示的物体 而离散化被用在了两个不同方面 一个是空间离散化 这儿我们的传感器数量是离散的 注意这个光 最简单的一种模式就是 做积分 这里的每个传感器累积其接收到的光线 所以空间上是离散化的 而在幅值上也是离散的 我们无法捕获 由物体反射而来的光的每一个层级的灰度 但我们仍要将其离散化 所以 让我们来看一看 关于这个问题让我们多谈一点 这是我们真实看到的物体 让我们先来看一条线 我划过这个对象 因此 我们可以看到不同的值 从白色到灰色 因此 让我们把这里看到的情况描绘出来 这里非常亮 是白色 接着变暗了一点 如果我们看这儿 让我抹去这个以便 我们能够看得更清楚 如果我们移动一下 让我在这儿做个标记 如果我们移动一下 会看到它将是白色 然后变暗 接着它变得亮了一点儿 然后再次变暗 最后它又变成白色 所以它的形状是这个样子 高的表示白色 接着变暗 然后它上升 下降 接着它又变成白色了 当然 它并不完美 它含有一些噪声 就像当我们购买涂料并粉刷了一面墙时 我们认为粉刷过的墙成了一个颜色 但实际上它不是 它有一些小的变动 比如这儿 再次重申 这里用到了两种处理过程 一个是采样 我们要根据一定的离散间隔来取值 我们不会取遍所有的值 我们只在一定间隔上取值 明白了吗？ 这是一个离散化过程 第二个离散化过程就是 我们不能把这里的每一个值都表示出来 我们将只会表示它们中的某些值 我们将要近似地表示它们 所以让我来举一个例子 一个非常简单的例子 来说明我们如何近似 比方说 我们来看这个值 17.5 所以基本上我们看到 这个值表示这里的一个特定的灰度值 那么我们如何来近似这个呢？ 一种方法是像这样对它进行截取 然后就是 我知道进入传感器的值是17.5 但实际上我用17来表示它 还有许多方法来做近似 我们就通过量化的例子再详细讨论 这是采样 在这个方向上 灰度值的离散化被称为量化 我们还可以考虑 例如如果我们和以前一样还取17.5 我们可以把它除以2 在此基础上并乘以2 也就是我们除以2 然后我们近似取整 接着我们乘以2 那么我要问你的是 作为一个小练习 这里得到的值是多少？ 如果 再除以2 会发生什么呢？ 我们举例来说 把它除以4 向下近似取整 然后再乘以4 好好想一想这个 这是一个简单的算术运算 我们将在量化这一章就这个特别的运算进行更多的讨论 那么总结来说 我们有两种方式进行采样 一个是 其实是两种使用了离散化的方法 一种就是空间域的采样 另一种就是灰度值的量化 因此 其基本思想是 当我们从一个连续的对象开始 它在空间上是连续的 同时有各种各样的灰度值 通过对空间域和灰度值进行离散化 我们最终得到了一个离散化的物体 好的数码相机 就是在这里有足够密集的采样 还有非常精细的量化 以致于我们都不会发现 这一切都是离散的 但实际上 它们是离散的 因此 我们得到了像素值 其中每一个被称为一个像素
在 7 分 58 秒处开始记录7:58
这来自于图像元素
在 8 分 7 秒处开始记录8:07
并用像素来表示 实际上 如果你用谷歌或者在网上搜索一下 你会发现有趣的事 你将发现第一个使用像素这个词的人 他实际上是一位非常著名的统计学家 你会从在互联网上搜寻答案中找到乐趣 还可以在博客讨论你的发现 因此 这些都是离散的 在空间上和灰度值上都是如此 我们就是这样得到像素的 再次强调 采样的密度越高 量化的层级越密 图像的质量就越好 因此 就一般的图像而言 例如 256×256 在空间域中 这将意味着 将有256的平方这么多的像素 也许每个像素由8个比特位 (bit) 表示
在 9 分 17 秒处开始记录9:17
因此 每一个像素用 8 bits 表示 这意味着它可以 表示256个不同的灰度值 我们将看到这个的重要性 空间的离散化以及 灰度值的量化 都是相当重要的 我们还能够获得更好的图像 那么 让我们回到前面 比如说 有一张图像 这里不是256×256 而是512×512 并且仍然是 256个灰度值 这样这张图像需要更多存储空间 但它将拥有更好的质量 那么重复一遍 当你要购买数码相机时 他们通常会对你重点强调这个数字 即 有多少像素 它可以告诉你采样的密集程度 我们想要许多的像素 因此它们是如此地紧挨在一起 以至于我们实际上相信 它是一个连续的空间 同理 也相信灰度值的层级也是连续的 因此 再次说明 这些中的每一个都是一个像素 它们由灰度值表示 现在这是一幅黑白图像 实际上 在我们的相机里 我们得到的是彩色图像 彩色图像是由这样的三个图像来表示 一个红色 一个绿色
在 10 分 49 秒处开始记录10:49
还有一个蓝色 所以基本上来讲 照相机获取的图像 我将在这里多讲解一下这个问题 获取三幅图像 一张显示蓝色 代表场景中有多少蓝色 另一张显示绿色 还有一张显示红色 这就是所谓的红色、绿色和蓝色 (RGB) 所以你经常会听到 RGB图像 关于这点我再说明一下 大部分的低端和中端消费级相机 其实它们都没有真正地捕获每种颜色的完全的二维矩阵 我们想要的是单独的红色 绿色和蓝色图像 因此我们将有红色 绿以及蓝 这将是理想的情形 更昂贵的相机真正做到了这一点 它们捕获了三个完整的图像 而大多数消费级相机 如果你买了一款 低端数码相机 实际上有些东西稍许不同 会出现被称为马赛克的东西 简单地说 就是它以颜色交错的方式捕获像素 它捕获了一个红色 一个绿色 一个红色 一个绿色等等 这里将捕获一个红色 一个蓝色 一个蓝色 一个红色 等等 所以下一个会是红色 绿色 红色 绿色 下一个又是蓝色 红色 蓝色 红色 因此 实际上 它不具有三倍的像素量 其实是 一个红色像素 一个绿色 一个红色 一个绿色 由此看来 我们需要进行插值 我们将学习如何插值 这会在第三和第四周的课程中讲到 因为要显示出全色彩图像 就需要每个像素中 都有红色 绿色和蓝色 (RGB) 这里 我们已经有了红色 我们还要补充绿色和蓝色 这是通过临近像素的信息来得到的 这儿 我们有绿色 我们将要补充上红色和蓝色 因此 我们将要补充完成三个颜色通道 以便看到一幅彩色图像 你购买一台数码相机时 他们通常告诉你一个尺寸 这个尺寸是插值后的结果 然而 他们会说 一般的日常照片 获取的图像就是这样 其实 相机实际捕获的数据 仅有他们告诉你的那个数值的三分之一 因为给你的是对拍摄的图像进行插值后 得到的图像 所以这里我们得到了一些离散的图片 我们有红色 绿色和蓝色的通道 我们将它们想成 红色 绿色和蓝色 这时我们已经对得到的图像进行了插值 顺便说一下 这叫做马赛克 彩色图像就是这样制作出来的 那么 对于视频来说是怎样的呢？你已经知道了 彩色图像是如何保存在电脑中的 有三个通道 三个二维离散数组 分别对应红色 绿色和蓝色 对于视频来说是怎样的呢 基本来说视频和这很类似 这里一张图片含有红色 绿色 蓝色 (RGB) 在视频中 你会有很多这些图像 比如 在视频的一秒钟内 一些格式下 你将会获得30张图片 也就是说 你将会得到30张 RGB 图片 然后每一张图片 还记得吗 都是二维结构 基本来说 如果你想在你的电脑里保存一秒的视频 你会得到 30*3 张图片 1秒钟内有 30张图片 乘以3 是因为有三种颜色 所以在1秒钟内 将有90张这种类型的图片来表示 1秒钟的视频 当然 90张图片 我们来看看90张分辨率为 512 x 512 的图片 每个像素 占 8 bits 这就是你需要在这个相对低的分辨率情况下 所占用的存储空间 这不是特别高的分辨率 这很标准 但是这就是你电脑展示 1秒视频需要的东西 顺便提一下 这里的 3*8 bits 乘以3 是因为我们有 RGB 三个通道 有时候人们会说分辨率是 24 bits 那是指我们使用 24 bits 来表示一个像素 这就是你使用的方法 如果你有一台电脑 上面有程序知道如何处理图片 你会看到很多二维离散数组 和你图片包含的秒数或帧一样多 这是三十分之一 我们称它为一帧 一秒钟内有30帧 或30张图片 当我们说到静止图像的时候 也就是我们通常说的图片 当说到视频的时候 这里每一张图片 我们称之为帧 所以这就是你的图像的表现方式 我们再来看看 在空间尺度中的分辨率、灰度值的分辨率的效果和重要性 也就是说 这里有多少像素 以及你会为它们设置数值为多少的灰度值 这里又是相同类型的表示 这就是一张单色的图片 或者一张单色帧所呈现的方式 如果你有一个字母D 这些像素是 0 当我们有 8 bits 时 一般来说 0代表黑色 1 或者 255 表示白色 所以如果是 8 bits 你可以使用从 0到255 这些数值 0表示黑色 255表示白色 有时候255 也可以称作1 如果你想使用 0和1之间的间隔表示 所以 虽然你看到的是这样 其实在计算机中 是由很多0 表示黑色的区域 这部分区域的像素值是处于灰度值中间的位置 它们的灰度值可能等于 128 或者等于0.5 我们看这里灰度值是0.5 白色用 1 表示 这就是你的电脑中对这幅图的离散表示 对于每一个像素 都有一个离散值 有时 你能用的只有 256 个不同的等级 有时候你的图片太亮 你也许无法表现 亮度之间微小的不同 请注意 人类视觉系统可以 适应许多的等级 很多的亮度等级 但是并不是同时适应所有等级的亮度 对图片来说也是一样 我们可以获得很多很多等级 也许256个 但是 如果我们希望同时处理这样一个有暗区域和明亮区域的图片的时候 我们就有了问题 有时候 我们不能获取到 在明亮区域内很小的差别 这被称作 饱和度 所以这里看起来全白因为 这里所有像素值都达到了255 也许超过255 超过了255 因为那里特别亮 这经常发生 我们拍照后 有时我们看到 被称作高光的部分 或者很强的反射 使其看起来为白色 它看起来十分明亮 那是因为 图片 传感器已经饱和了 所以 这就是原因 现在你知道为什么这会发生了 你有一些离散的等级 一些离散的数值 来表现你的图片 这里的值超过了你可以表示的离散值的范围 所以再次重申 两个离散化过程 一个是空间尺度上的 一个是灰度值尺度上的 来看看发生了什么 有什么样的效果 其实你知道的 因为如果你有 一台数码相机 或者如果你在网络上浏览图片 你会看到不同分辨率的图片 所以如果你使用了大量的像素 你可能会看到类似这样的图片 也就是说 你有一张非常非常精细的图 很多的像素 看起来很棒 另一方面 如果你的图像很粗糙 没那么稠密 意味着没有那么多像素 你会看到像这样的图片 显而易见 比如说 这条线显示得很清晰 而这里就有些模糊 你可以很容易地看到这里的小数字 但这里却不那么容易 看看这里的数字 它们在这里就没那么清晰 这里我们只是改变了空间分辨率 我们没有修改灰度值 我们仍然有 256个值 所以这里每一个像素都可由 256个灰度值表示 这里也是这样 但是我们在低分辨率下无法像高分辨率中表现那么高的精细度 你可以想一想 再一次 如果我想画一张描述图 如果你希望表示 这个表达灰度值的图 你需要对其离散化处理
在 21 分 44 秒处开始记录21:44
如果你画的很粗糙的话 你不会发现 这里灰度值有一个平滑的变化 但是如果另一方面 你可以加入更多的层 你可以获取到 很多很多点的值 而不仅仅是很少的一些 让我使用另一种颜色 只是几个通过粗略的离散化得到的值 这也是为什么这图像看起来不像这张这么精细 因为离散化是在一个很粗糙的层面上捕捉信息的 在空间上离散化 类似的 如果你对灰度值做一个粗糙的离散化 我们再一次说好 我们不改变像素的数量 这四张图和接下来出现的四张图 像素个数完全相同 其实这里写了 它有452个像素 我把它写大一点 乘以 374 所有的图都是 但是第一张图使用了8 bits 表示 表示它可以有256个值 所以我把它们写下来 写在这里 第一张是256 我们可以看到它非常非常的平滑 非常非常精细 这里 我们只使用了7 bits 或者说 128个值 基本来说 0和1被当做0 2和3被当做2 4和5被当做4 最简单的完成这件事的方法是 将这里的每一个值都除以 2
在 23 分 49 秒处开始记录23:49
取比它们小的 最为接近它们的整数 然后你再将它乘以2 这里比如说 如果这张图的这个值是8 除以2
在 24 分 5 秒处开始记录24:05
除以2 抱歉 写错了 除以2 那就是4 再乘以2 你又得到了8 对这个像素值没有影响 但是如果这样呢 如果像素值为9 会发生什么？ 将它除以2 得到4又1/2 我取比它小的 最为接近它的整数 就是4 再将其乘以2 得到了8 这里9变化成了8 这样的操作减小了可取值的范围 同时也降低了图像的质量 在我们只使用64个不同值的情况下 可能更糟糕 这可以看成是 除以4 向下取整 然后再乘以4 这表示你将会 如果你只有64个值 意味着每四个值由一个数字表示 这里 0、1、2、3全都变成了0 4、5、6、7 全都变成了4 等等 你可以继续 只用32个值来表示 我希望你会发现质量不断变差 特别的 如果你看看这里的线条 这是所谓的 伪轮廓 你可以看到这里的线条并不清晰 这里有一个平滑的过渡 但是这里你却能看到这些伪轮廓 产生这个的原因就是因为刚才提到的那些被跳过的值 所以如果这里是 1、2、3、4 事实上当你使用很少很少的灰度值的时候 你得到的是0、0、0、4 你会得到那样的值 因为你用了更少的资源来表示不同的灰度值 这甚至会走向一个极端 我们继续 这里我们只用16个值 相信你们可以清晰地看到 伪轮廓 我们只使用 8个值 只用 8个数字来表示 图片中所展现的一切 这是一个很极端的量化过程 这张图里只有4个值 这张里只有2个 在这个极端的案例中 所有小于128的值都被设定为了0 变成了黑色 所有大于128的值都设定为了255 变成了白色 然后得到了这组非常低质量的数据 这些就是空间量化 是空间采样 以及灰度值量化 是如何产生影响的 当你有更多的样本的时候 你会得到更高的质量 对于灰度值 你有更多的可能显示更多的细节变化 图片质量也就越高 当然 这样则需要 占用电脑中的越多的存储空间 这将在我们关于压缩的单元里学到 现在我们知道了图片在电脑中是如何表示的 它们由这些二维数组表示 灰度图像只用一个二维数组表示 彩色图像由三个数组表示 分别代表红、绿、蓝 视频由很多图像表示 比如 每秒 30张 有时候由于不同的标准 只有24张 总之就是有很多图像 就像我们前面说的 称它们为帧 我们知道一切都是离散的 所以有采样和量化 在计算机中 一张图片仅仅就是 元素为离散值的二维数组 谢谢大家 //果壳教育无边界字幕组 Mosesdc | 神无月的鱼头 | 和风煦日 | 小白_远游