利用上一个视频讲到的离散二维数组 计算机可以这样描绘出图像 也就是我们从这张连续的图片 得到了这个二维离散数组 现在我们就可以对这些图片进行处理了 现在图像在我们的电脑中 它们可被看成像素的二维数组 我们就能够基于此进行各种各样的处理 就如我们前几节课视频看到的那样 在接下来几周里 我们将会学到一些非常复杂的操作 我们先从一些简单的例子开始 它们虽然简单但却非常有用 能够让我们知道如何真正地处理这些图片 你也可以用自己的电脑 来实践我一会给大家演示的例子 如果你有MATLAB这样的软件 这只需要几分钟时间或者更短 MATLAB 是一种常被用来处理二维数组的软件 当有了一个二维矩阵 我们可以就开始 探讨邻域处理 要记住 我们有一个二维数组 现在我们要在像素层面探讨 在这里我画了一个像素点 我要问哪些像素和这个像素相邻 这里介绍图像处理中的两种邻域 一种称之为 “4邻域” 只包含画出的这四个点 也就是说你只能 去找上下左右的四个像素 所以这就是 4领域 另一种常见的类型就是 “8邻域” 你或许已经猜出来是怎么回事了 如果是这个像素点 就要取环绕着它的所有相邻像素 你可以和刚才一样 看到上下左右的点 你也可以看到像左上角 这样的对角邻像素 举个例子 看看这张图 这个像素的 4邻域像素中 不包括这个点 因此 这两个 1 不相邻 这是因为4邻域关系 并不包括对角线位置的点 而在8邻域像素关系中 它们就是相邻像素了 当然 这个概念也可以迁移用于像素组中 上面这个像素组和下面的这个像素组存在8邻域的关系 因为有一个 1 在这儿 而另一个 1 在它的对角线上 这时可以考虑对角线上的点 现在 如果我们考虑的是4邻域的话 我可以说 上面这一组 1 与下面这一组 1 是不相邻的 因为从这个 1 出发 我们只能向下找 在下面这个组中 我看不到和它相邻的“1” 在这个 1 的右边 也没有 1 因此 我们能够进行什么样的操作取决于在这个离散空间中 是如何定义邻域的 我们将会看到这很重要 这种邻域 在现代图像处理中最为常见 但是了解这种领域也很重要 尤其是在我们进行图像分割或者类似的操作时 再比如说 我们今后会谈到 我们会讲解 三维图像 不是那种平面上的有灰度值的图像 就像这样 每个像素都有一个灰度值的这个平面 但是我们将要说到的体积图像 位于其空间内的每个点 称之为 体素 (voxel) 都有灰度值 邻域关系对于这种图像而言非常重要 比如说 在医学图像中 判断这个器官和另一个器官是否相邻 我们就需要界定邻域关系 在图像分割的时候 也是如此 邻域如此重要 但现在我们仅就二维数组中进行讨论 我们对在二维数组 进行一些简单的操作 比如说我们可以叠加它们 记住 每一个点 例如这张图 每个点都有相应的值 因此 我可以把这张图像叠加到第二张上 所以我可以把图像一 加到图像二上 这就意味着 我特意在这画一个小图像 图像为三行三列 我取这个点的值与另外这个点的值相加 我假设这个值是7 另一个的值是10 那么结果就是17 下一个像素我也这么处理 这种图像相加很简单 是一种简单却又很重要的处理方法 我们看看这个操作 这里有好几张NASA拍摄的同一个星系的图像 他们拍摄 再拍摄 重复多次 得到越来越多的图像 这张图像噪点很多 这些图像排列在一起 他们不移动相机 什么都不变 然后一张接一张拍摄 再叠加起来 随着他们对图像的叠加 图像开始变得越来越清晰 因此这里 他们叠加了五张 然后又叠加十张 直到叠加了100张 也就是他们把 I1+I2 的操作进行了100次 就是把一百张的星系图片 叠加到一起 使得得到的图像开始变得越来越清晰 这是因为图像有噪声 这些图像中的场景固定不变 这些噪声却不断变化 当你把图片都叠加起来 相当于叠加了图片中拍摄对象的像素值 而噪声又是随机的 这样噪声就显得微不足道了 当我们讨论如何处理空间噪声 以及讨论如何增强图像的时候 我们将非常详细地讨论这个话题 那么基本思路就是 我们可以简单地将一些二维数组相加 从而完成一些有趣的处理 我们还可以做其他的事情 我们还可以对图像进行掩模处理或者相减运算 我们可以看到这幅图像 还有这幅图像 这是同一场景在不同情况下拍摄的两张图像 接下来 我们找出了它们之间的差别 你看 这个凸显出来的不同之处 可能对于医生来讲非常非常重要 而这是增强以后的图像 我们往后会讲到如何增强图像 例如 通过改变灰度值的分布使其更加清晰 那么这里 上面两幅图我们标记为 I1、I2 然后进行了 I1-I2 如果不关心正负的话 我们有时候也会取绝对值 有时 我们只是移走所有负数值的像素 这样就把负值都变成了 0 这再一次证明了这种简单的操作也具有重要意义 有时 我们也可以对图像进行逻辑运算 我们可以对图像A和图像B 做A并B的运算 让我们假设这部分 (A部分) 的值都是255 其余部分都是0 B部分的值也全部是255 然后得到并集 这个图我们得到了交集 即 在A和B中 值为255或者白色值的所有像素 同理 想一想用你的电脑你可以对二维数组进行哪些运算 你也可以对图像进行相同操作 现在我们知道了 用计算机操作二维数组是多么重要 我们还能对一幅图像进行反相 基本思想是 这部分特别黑的地方是0 最亮的这个点是255 然后我们可以进行反相 将0变成255 将255变成0 在坐标里表示就是这样 假设横轴是输入 纵轴是输出 画出来就是这样的 0对应成255 255对应成0 我们对图像反相操作 利用这个我们可以发现一些有趣的事情 也许反相后的图像会比原来的图像 更容易从中观察到一些对象 总结一下 数组的这些简单操作可通过计算机运用于图像处理之中 我们也能做不同的空间操作 比如图像叠加 我用一张图片 再拿另一张图片 然后相加 或是图像反相之类 但是我们还能做一些更复杂的事情 事实上我们还可以把图像中一个像素替换为的与之相邻像素的平均值 注意 需要先定义相邻像素的类型 好的？ 因此 我们可以设为 8邻域 我们之前讲到过这个
在 9 分 41 秒处开始记录9:41
我可以把这个像素替换为所有像素的平均值 也包括它自己 因而我们只要把所有像素的值相加 然后再除以9 把得到的数值赋给这个像素 这个是原图 我们把每一个像素点都做了这样的处理然后是这样 所以对于这个像素 我把它标记在这里 我们找到了它的 8邻域 然后把这个像素替换为 周围所有像素的平均值 然后对于下一个像素 我们也这样做 这里发生了交叠 我用另外一个颜色标出来 因此 这个像素会用到这个 这个 这个 这个 这个 这个 这个 还有这个 蓝色的点则用到了这个 这个和这个 这是它自己的 8邻域 之所以会交叠 是因为我们一次变换一个像素 然后我们对图像中每个像素都是这样一个一个处理 极力推荐你做一下这个小练习 这就是我们得到的结果 我们移除了噪点 但却得到一张很模糊的图像 我将会说明为什么会这样 在一些情况下 这是一种的很有用的图像处理应用 我们将会了解这是怎么实现的 我们所选取的相邻像素 事实上并非那么简单 当像素间变化比较大时 我们不会用到另一边的像素 因此 最终可能只用了 6个像素进行平均 而不是通常 9个像素的平均 这是一种非常简单的操作 每个像素被替换为一种线性组合 在这里 就是指替换为周围像素的平均值 另一种图像处理方式是图像变换 我们可以做各种不同的图像变换 这个是我们没有变化的原始图像 我们可以对它进行缩放 比如使其变大 我们也可以让图像旋转、移动、平移等等 我们可以用数组进行平移变换 我们还可以用数组进行旋转变换和缩放变换 它们都是计算机中的二维数组 因此我们可以进行任意的这些操作 这就是操作的效果 如果我们要旋转图像 我们要进行旋转变换 我们把 T 所在的图像整个旋转 从而看上去这个 T 被旋转了一些角度 放大边缘看一下 这再一次说明了离散化的问题 当我画一条直线的时候 放在这个离散化的图像中 如果是这么竖直画的话 就不会有问题 但是 当一条直线这样画 不位于中间 而是穿过对角线方向 就会产生像我们在这看到的这种不完整的效果 像素点越多的话 我们就越难察觉这种问题 这里我们只讨论旋转的可能后果 对图像进行不同操作的可能后果 这是一个完整的例子 我希望你能看看它 这是我的原始图像 这是旋转后的图像 我们也可以把它转回来 看上去还算不错 但还是有些不同 这是两幅图像的不同之处 如果要写出来这个过程 我有一张图 I 然后我旋转它 R(I)
在 13 分 43 秒处开始记录13:43
这个的结果 就得到了这个图 再朝相反方向旋转它 就能得到这幅图 然后两张图相减 也就是这个部分减去 I 这是 I 这是旋转后的图像 这是逆旋转的图像 这个是相减后的图像 两者不同的原因就是 因为采样和离散化 我们在之前的视频中讨论过 还有一点 我们可以实现的 将在下一周讲述关于图像压缩的话题时讨论 我们可以对图像进行变换 你们在数字信号处理的课程中已经知道了 有一种变换是 傅里叶变换 (Fourier transform) 我们可以对一幅图像进行傅里叶变换 而在图像压缩中非常重要的一点是 我们不做傅里叶变换 我们要进行一种 叫做离散余弦变换 (Discrete Cosine Transform) 的变换 这是一幅图像 我们对它进行傅里叶变换 这是傅里叶变换后的图像 你现在所看到的是噪声能够在傅里叶域中滤除掉 我不在这讨论关于傅里叶的信号处理 (signal processing) 的背景知识 而且我们也不需要了解很多 我将会在今后每周 的课程中讲到那周需要的背景知识 实际上我们也不会用到太多的傅里叶 如果你不具备这些知识 那么不用傅里叶变换 我们也可以完成许多的图像处理 因此 你也不必去上数字信号处理的课程 别担心 除了这一页幻灯片 我们不用傅里叶就可以完成所有事情 所以 不用担心 但如果你们熟悉傅里叶的话 你就能看到滤波的效果 比如说 这个是滤波器 这是处理后的结果 因此 我完成了变换 经过滤波和逆变换 得到了一张非常清晰的图像 再重复一遍 如果你们熟悉基本的关于傅里叶变换的信号处理知识 这里也只会用到傅里叶滤波器 如果你们对此不太熟悉的话 你可以理解为我把这幅图像 这个二维数组变换为另一个不同的二维数组 然后我进行了一些操作 然后又变换回来 我就得到了一张清晰的图像 再一次 这只是为了直观地展示我们所做的 其实是对二维数组的运算 对于每个点 会有对应的值 这个值可以表示特定位置、像素的亮度或者颜色 现在我们知道了图像 在计算机中是如何表示的 现在 我们发现如果我们想要很多像素 想有很多的灰度值 就需要占据很大的空间 因此 在下周的视频中 我们就来讨论压缩的问题 怎样才能在保持图像质量的前提下处理大量的数据 谢谢大家 //果壳教育无边界字幕组 showonder | 风过成伤 | 小白_远游