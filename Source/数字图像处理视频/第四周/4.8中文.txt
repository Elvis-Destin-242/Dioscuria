大家好 欢迎回到我们的课程
我们将再次利用MATLAB 来演示维纳滤波器 (wiener filter) 的例子
和之前一样 我们先载入一幅图像 这个图像我们以前看到过 这个土星 (Saturn) 的图像 它是个彩色图像 所以我们要将它转换成黑白图像
这个操作之前也用到过 然后我们给图像加上高斯噪声 (Gaussian noise) 这个步骤在这里 之前演示不同类型的噪声时 我们也用到了这个命令 这个参数是噪声的方差
现在 我们要用到维纳滤波器了 在MATLAB中 这个命令能够调用维纳滤波器 我们将用它来处理这个叠加了高斯噪声的图像 在展示维纳滤波器的处理结果之前
我想把它和另外一个滤波器做比较 事实上 我想把它和均值滤波器做比较 我将用半径为10的圆形区域 对噪声图像进行滤波 这个命令用到了 半径为10的圆形区域来计算局部均值 别担心这个参数
这只是告诉MATLAB 在边界条件下如何进行处理
所以 我们将会看到 原始图像 噪声图像 均值滤波器处理后的模糊图像
还有维纳滤波器处理后的图像 那么 我们来看看这些结果 我们将载入所有图像
这将有助于看到 维纳滤波器是多么有效
我们又看到了先前的原始图像 这个是叠加了噪声的图像 这个是维纳滤波器的处理结果
这个是均值滤波器的处理结果 可以看到维纳滤波器修复后的结果 相当得不错
它利用这个噪声图像 很好地还原了原始图像
而且它比均值滤波器做得更好 我把两幅图像放近些 这样我们就能够 看到两者的差异
这幅图像明显 比用均值滤波器得到的结果更加清晰 所以 当我们向维纳滤波器提供一些信息时 它的处理结果会很好 在这种情况下 维纳滤波器会评估它得到的信息 我们在前一个视频的最后看到过这个实现方式 它是实现维纳滤波器最简单的方式 但是仍然能够利用噪声图像 很好地修复出原始图像 我们再看一下这些图像 这是原始图像 这是噪声图像
当然 维纳滤波器并不知道这个原始图像 它利用噪声图像修复出相当清晰的图像 而不是模糊的图像
所以它修复得相当棒 我们可以看到 这比用均值滤波器产生的模糊图像好很多 这样我们就结束了对维纳滤波器的演示 非常感谢