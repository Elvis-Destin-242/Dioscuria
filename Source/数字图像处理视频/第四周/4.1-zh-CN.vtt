WEBVTT

1
00:00:00.000 --> 00:00:03.975
大家好 欢迎来到图像和视频处理第四周的课程 

2
00:00:03.975 --> 00:00:08.584
由于最近的几周我们已经学了很多的 

3
00:00:08.584 --> 00:00:12.597
有关图像与视频处理的新概念 这周的内容会少一点 

4
00:00:12.597 --> 00:00:15.918
在学了如此之多新内容后 

5
00:00:15.918 --> 00:00:18.707
我觉得我们应当有一周稍微短一点 

6
00:00:18.707 --> 00:00:23.622
但这周内容会短一点的主要原因是 

7
00:00:23.622 --> 00:00:28.803
当我们在图像处理课程中讨论更高级的内容时 

8
00:00:28.803 --> 00:00:34.050
我们将再次回到一些重要的有关图像复原的实例上 

9
00:00:34.050 --> 00:00:37.593
但我们仍需要学习图像复原的基础 

10
00:00:37.593 --> 00:00:40.770
并理解什么是图像复原 

11
00:00:40.770 --> 00:00:45.046
我们直接进入主题吧 但在此之前 

12
00:00:45.046 --> 00:00:48.406
对于这周的主题 你需要了解哪些背景知识呢？ 

13
00:00:48.406 --> 00:00:52.438
如果你有信号处理与傅里叶分析的知识基础的话 

14
00:00:52.438 --> 00:00:56.531
在这周的某些部分中你会比较轻松 

15
00:00:56.531 --> 00:00:59.220
但鉴于在之前的几周也曾发生过 

16
00:00:59.220 --> 00:01:03.782
内容会比较独立 这样你应该能 

17
00:01:03.782 --> 00:01:07.628
只要有很少的背景知识就能听懂基本概念 

18
00:01:07.628 --> 00:01:10.627
主要需要一些线性代数的背景知识 

19
00:01:10.627 --> 00:01:14.798
但是如果你知道傅里叶分析的话会更加有利 

20
00:01:14.798 --> 00:01:19.687
尤其是在 维纳滤波这一部分 

21
00:01:19.687 --> 00:01:22.751
一会儿我们会讲解到那里 

22
00:01:22.751 --> 00:01:25.880
那么 什么是图像复原呢？ 

23
00:01:27.000 --> 00:01:33.430
在图像复原中 与图像增强相对 我们将试着复原图像 

24
00:01:33.430 --> 00:01:37.663
这有个图像的退化模型 

25
00:01:37.663 --> 00:01:43.084
就是我们在这里看见的 这就是退化模型 

26
00:01:43.084 --> 00:01:47.731
我们从一幅图像开始 图像经过退化后 

27
00:01:47.731 --> 00:01:52.697
退化即由滤波器 H表示 在后面我们会详细地介绍 

28
00:01:52.697 --> 00:01:56.644
有关退化的实例 比如说模糊 

29
00:01:56.644 --> 00:02:00.973
散焦 当我们拍了一张没有对焦的相片时 

30
00:02:00.973 --> 00:02:04.283
这就是一种退化 另外一个例子被称作运动模糊 

31
00:02:04.283 --> 00:02:07.148
当我们拍运动得非常快的物体时 

32
00:02:07.148 --> 00:02:12.240
在相片中会看到一些模糊的地方 

33
00:02:12.240 --> 00:02:16.992
这就是另外一种退化 在图像经过退化后 

34
00:02:16.992 --> 00:02:22.999
还会有噪声的加入 例如相机中的传感器会产生噪声 

35
00:02:22.999 --> 00:02:26.603
处于磁共振中的传感器会产生噪声 

36
00:02:26.603 --> 00:02:31.480
于是就有噪声叠加进图像 这就是我们所观察到的 g 

37
00:02:31.480 --> 00:02:38.626
现在从 g 我们需要回到 f 并尽可能地和原来的 f 保持一致 

38
00:02:38.626 --> 00:02:43.482
这就是为什么它被称为复原 我们将要试着逆转退化与噪声 

39
00:02:43.482 --> 00:02:48.691
从而能够得到与之前尽可能贴近的图像 

40
00:02:48.691 --> 00:02:54.321
这个复原的图像 我们想让它与原来的图像尽可能一致 

41
00:02:54.321 --> 00:02:59.253
这就是图像复原的目的 

42
00:02:59.253 --> 00:03:04.128
在图像增强中我们并没有这样的目标 我们仅仅是 

43
00:03:04.128 --> 00:03:09.071
想让它看上去更清楚 更锐化 这样有利于我们视觉上接收 

44
00:03:09.071 --> 00:03:12.186
而现在的目的就是复原这个图片 

45
00:03:12.186 --> 00:03:16.994
这是不同的目标 虽然它们间有一定关联 

46
00:03:16.994 --> 00:03:20.577
但仍然是不同的 明白了吗？ 我们之前几周中 

47
00:03:20.577 --> 00:03:25.519
所了解的一些知识 实际上对图像复原也是很有用的 

48
00:03:25.519 --> 00:03:29.114
例如非局部均值 你能看出它在某些特定情形下 

49
00:03:29.114 --> 00:03:34.633
将图像复原了 那我们现在的模型是怎样呢？ 

50
00:03:34.633 --> 00:03:36.620
g 是如何产生的呢？ 

51
00:03:37.720 --> 00:03:43.390
它是f 经过退化的结果 

52
00:03:43.390 --> 00:03:50.652
于是我们有 f ( x, y ) 与 H ( x, y )卷积 这就是退化模型 

53
00:03:50.652 --> 00:03:55.725
通常这被视作一个线性的操作 

54
00:03:55.725 --> 00:04:00.600
这是卷积 我们将其与噪声叠加 

55
00:04:01.940 --> 00:04:07.735
大多数图像视频处理过程主要是有加性噪声 

56
00:04:07.735 --> 00:04:12.081
这种噪声加在了图像上 

57
00:04:12.081 --> 00:04:18.198
并不是所有真正的相机或采集设备都会这样工作 

58
00:04:18.198 --> 00:04:22.142
例如 还有乘性噪声 

59
00:04:22.142 --> 00:04:28.553
通常来说 是指退化结果与一些噪音相乘 

60
00:04:28.553 --> 00:04:32.285
还有其它类型的噪音 

61
00:04:32.285 --> 00:04:36.017
但这两种是最常见的 

62
00:04:36.017 --> 00:04:41.414
最常见的是加性噪音 除此之外还存在比较有限的乘性噪音 

63
00:04:41.414 --> 00:04:46.397
乘性噪音的一种效果是 

64
00:04:46.397 --> 00:04:51.014
噪音的量是由信号自身决定的 

65
00:04:51.014 --> 00:04:56.217
如果像素值是三 我们就乘上三 

66
00:04:56.217 --> 00:05:02.227
如果像素值是十 就乘上十 那么噪音的量可能会变得非常大 

67
00:05:02.227 --> 00:05:05.416
对于加性噪音就不会这样 

68
00:05:05.416 --> 00:05:07.514
所以它去噪音的过程是 

69
00:05:07.514 --> 00:05:12.124
与图像独立的 现在 有种方法 

70
00:05:12.124 --> 00:05:18.747
能将乘性噪音转化为加性噪音 于是我们能处理 

71
00:05:18.747 --> 00:05:24.133
所有含有加性噪音的图像 也可以处理经过一个小操作后的 

72
00:05:24.133 --> 00:05:28.450
含乘性噪音的图像 我想你们是否知道我们使用的是什么技巧 

73
00:05:28.450 --> 00:05:32.413
在我告诉你们答案前可以想想看 

74
00:05:32.413 --> 00:05:35.668
这个问题很简单 

75
00:05:35.668 --> 00:05:40.976
先自己想想你们是否知道如何处理乘性噪音 

76
00:05:40.976 --> 00:05:45.576
能将它转化为加性噪音 我们一起想想 

77
00:05:45.576 --> 00:05:47.563
我马上就会告诉你们答案 怎样？ 

78
00:05:47.563 --> 00:05:52.719
你就花点时间思考下 可能很快就有答案了 

79
00:05:52.719 --> 00:05:58.819
或者你过会儿就想到 也可能你一直等着我告诉你答案 

80
00:05:58.819 --> 00:06:02.159
这个思路很简单 

81
00:06:02.159 --> 00:06:06.444
如果是乘性噪音而不是加性噪音的话 

82
00:06:06.444 --> 00:06:10.293
我先擦去这个 就有很多空间能写东西了 

83
00:06:10.293 --> 00:06:17.310
那么 如果你将两个数相乘 a乘以b 我能对其取对数 

84
00:06:17.310 --> 00:06:21.826
即对二者的积取对数 

85
00:06:21.826 --> 00:06:28.828
那就等于a的对数加上b的对数 于是我得到了这个转换 

86
00:06:28.828 --> 00:06:33.151
假如b是我的噪音 这样就将其转化为加性噪音了 

87
00:06:33.151 --> 00:06:38.592
我们对图像的对数形式进行处理 

88
00:06:38.592 --> 00:06:44.108
而不是直接对图像进行操作 于是我将对噪音的对数进行处理 

89
00:06:44.108 --> 00:06:47.015
当你给我退化的结果 g 图像 

90
00:06:47.015 --> 00:06:53.270
我取g的 log 并将其从此时起视作加性噪音 

91
00:06:53.270 --> 00:06:59.003
当我完成复原之后 

92
00:06:59.003 --> 00:07:04.550
我需要进行这个的逆操作 也就是要用到指数函数 

93
00:07:04.550 --> 00:07:09.328
这也就是为什么很多的文献都致力于 

94
00:07:09.328 --> 00:07:12.845
处理加性噪音了 就是因为存在这个办法 

95
00:07:12.845 --> 00:07:18.021
现在这个方法也有它自身的问题 尤其是 

96
00:07:18.021 --> 00:07:22.202
若你没有去除所有的噪音 指数能将其放大很多很多 

97
00:07:22.202 --> 00:07:26.715
但是它也是一个形成加性噪音的重要方法 

98
00:07:26.715 --> 00:07:32.356
复原技术也能应用于乘性噪音 

99
00:07:32.356 --> 00:07:36.515
只是有些注意事项与限制 现在 我们对图像复原有了一个基本概念 

100
00:07:36.515 --> 00:07:40.178
让我们探讨下一个有关噪音的理论吧 

101
00:07:40.178 --> 00:07:43.151
在一幅图像中我们会有何种噪音呢？ 

102
00:07:43.151 --> 00:07:45.225
它们又来自何处？ 

103
00:07:45.225 --> 00:07:48.888
下个视频我们再讨论这个问题 

104
00:07:48.888 --> 00:07:49.580
谢谢大家