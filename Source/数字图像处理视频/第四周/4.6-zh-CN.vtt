WEBVTT

1
00:00:00.000 --> 00:00:04.250
大家好 欢迎回到视频和图像处理课程 

2
00:00:04.250 --> 00:00:09.310
我们将要继续图像复原的内容 目前为止 

3
00:00:09.310 --> 00:00:13.156
我们处理了噪声相关内容 接下来要学习滤波部分 

4
00:00:13.156 --> 00:00:16.260
请记住这是 

5
00:00:16.260 --> 00:00:20.038
我们讨论过的完全退化模型 

6
00:00:20.038 --> 00:00:25.570
我们将要对图像过滤 然后再加上噪声 

7
00:00:25.570 --> 00:00:29.214
现在假设没有滤波 只有噪声 

8
00:00:29.214 --> 00:00:32.722
通常来说 这里我们会看到的是g(x,y) 

9
00:00:32.722 --> 00:00:37.750
观察到的图像等于f(x,y) 

10
00:00:39.480 --> 00:00:49.476
和h(x,y)的卷积加上噪声 就像以前讨论过的 

11
00:00:49.476 --> 00:00:52.840
我们在图像中加入的噪声其实就是一种随机变化 

12
00:00:52.840 --> 00:00:56.189
我们已经知道如何来估计噪声 

13
00:00:56.189 --> 00:01:00.877
现在让我们来看看如何估计这个模糊函数 

14
00:01:00.877 --> 00:01:04.093
通常这里的函数h被称作模糊函数 

15
00:01:04.093 --> 00:01:07.174
这比估计噪声难得多 

16
00:01:07.174 --> 00:01:10.456
但在我们讨论为什么这很重要之前 

17
00:01:10.456 --> 00:01:15.680
让我通过一个非常非常简单的公式来说明为什么这很重要 

18
00:01:15.680 --> 00:01:20.168
为了方便起见 假设有一刻我们没有噪声 

19
00:01:20.168 --> 00:01:24.924
因此这里没有噪声了 我们将对其使用傅里叶变换 

20
00:01:24.924 --> 00:01:34.550
傅里叶变换结果是G(u,v)等于F(u,v)乘以H(u,v)   

21
00:01:34.550 --> 00:01:39.101
对于你们中熟悉傅里叶变换的人来说 

22
00:01:39.101 --> 00:01:44.352
这很容易 对于不熟悉的人 请先跟着我说的听一下 

23
00:01:44.352 --> 00:01:48.538
在傅里叶变换中 卷积变成了乘积 

24
00:01:48.538 --> 00:01:52.056
这样我们就将图片变换到了另一个域中 

25
00:01:52.056 --> 00:01:57.451
在这个域中卷积转化成了乘积 

26
00:01:57.451 --> 00:02:03.549
来看看我们得到了什么 我们想要估计原始图像 所以我们做除法 

27
00:02:03.549 --> 00:02:11.760
因此很好 我们做到了  F(u,v) 等于 观察图像 (的频谱函数) 

28
00:02:11.760 --> 00:02:18.060
退化的图片除以滤波器 

29
00:02:19.880 --> 00:02:23.255
如果我们能够估计滤波器 一切都变得简单了 

30
00:02:23.255 --> 00:02:27.903
我们获取观察到的图片 并进行傅里叶变换   

31
00:02:27.903 --> 00:02:31.788
对估计的滤波器进行傅里叶变换 我们将一个除以另一个 

32
00:02:31.788 --> 00:02:36.755
我们得到了原始图像 它经过了傅里叶变换 再做逆变换 

33
00:02:36.755 --> 00:02:40.257
我们重新得到了图像 这就是逆滤波 (inverse filtering) 

34
00:02:40.257 --> 00:02:44.970
有一些基本问题 尤其是因为我们无法保证 

35
00:02:44.970 --> 00:02:48.472
H(u,v)总是非零的 

36
00:02:48.472 --> 00:02:55.061
对于真实场景来说，它存在一些零点 UV取某些值时它会非常接近零 

37
00:02:55.061 --> 00:03:01.113
但是这个整体思路是非常好的 

38
00:03:01.113 --> 00:03:07.237
如果我们知道了退化函数 就能尝试做逆变换 

39
00:03:07.237 --> 00:03:09.552
这很酷 

40
00:03:09.552 --> 00:03:12.987
我的意思是 我们想要尝试去估计它 (退化函数) 

41
00:03:12.987 --> 00:03:18.663
就像我说的 估计它是很难很难的 比估计噪声难得多 

42
00:03:18.663 --> 00:03:24.264
让我们来看看能估计它的一些例子 

43
00:03:24.264 --> 00:03:28.820
还有一些我们现实中会遇到的 h函数 

44
00:03:29.940 --> 00:03:35.910
比如 这周早些时候我提到过的一个例子 

45
00:03:35.910 --> 00:03:41.153
什么是模糊 

46
00:03:41.153 --> 00:03:46.740
模糊表示我观察到的图像 是原始图像卷积上 

47
00:03:47.760 --> 00:03:53.787
高斯函数 这些高斯函数均值为零 方差或标准差不确定 

48
00:03:53.787 --> 00:03:59.545
我们已经知道基本的高斯函数 

49
00:03:59.545 --> 00:04:03.438
这个e指数是二次项函数 (具体公式查维基) 

50
00:04:03.438 --> 00:04:09.197
我们在讨论噪声的时候看到过这个高斯函数 

51
00:04:09.197 --> 00:04:14.793
它会模糊图像  现在如果你知道有某个高斯函数 

52
00:04:14.793 --> 00:04:18.361
正在影响你的观察 

53
00:04:18.361 --> 00:04:22.498
这就是观察到的图片 这是g函数 

54
00:04:22.498 --> 00:04:27.556
如果你知道 g 是 f 通过高斯滤波器后的结果 

55
00:04:27.556 --> 00:04:31.682
那么你就会知道 f 实际上是一个点 

56
00:04:31.682 --> 00:04:36.151
一个 δ函数 也就是一个点 

57
00:04:36.151 --> 00:04:41.996
比如在这个简单的例子中 你能估计模糊函数 

58
00:04:41.996 --> 00:04:48.699
实际上这不难 因为卷积有一个简单性质 

59
00:04:48.699 --> 00:04:56.080
如果 f 是 δ函数 它和G做卷积 

60
00:04:56.080 --> 00:05:02.000
结果得到 G 即高斯函数   

61
00:05:02.000 --> 00:05:08.030
这是个很简单的例子 在这个特定例子中可以估计出h函数 

62
00:05:08.030 --> 00:05:12.050
在这个例子里我们正好有一个高斯滤波器 

63
00:05:12.050 --> 00:05:14.511
这乍听起来也许令人奇怪 

64
00:05:14.511 --> 00:05:18.862
我是说 我怎么知道图片中有一个点 也就是是一个δ函数的？ 

65
00:05:18.862 --> 00:05:21.324
但事实上这并不荒谬 

66
00:05:21.324 --> 00:05:23.957
因为我们可以利用这个来校准系统 

67
00:05:23.957 --> 00:05:29.199
如果我们知道镜头是模糊的 那么可以人为地放一张图片 

68
00:05:29.199 --> 00:05:32.997
图片上有 δ函数 然后我估计模糊程度 

69
00:05:32.997 --> 00:05:38.658
所以这对于调整和评估镜头工作情况很有用 

70
00:05:38.658 --> 00:05:40.377
这非常重要 

71
00:05:40.377 --> 00:05:45.967
现在我将要告诉你们一些别的事情来增长你们的知识   

72
00:05:45.967 --> 00:05:49.120
以及为什么这是一个难求的函数 

73
00:05:49.120 --> 00:05:53.594
一个难预测的函数 如果G的卷积等于G和F的卷积 

74
00:05:53.594 --> 00:05:57.462
你也许会有疑问F是我的原始图像吗 

75
00:05:57.462 --> 00:06:00.420
我的原始图像是一个δ函数吗 

76
00:06:00.420 --> 00:06:05.046
是我模糊了一个高斯函数吗？ 或者换个问法 我的原始图像是一个高斯函数吗？ 

77
00:06:05.046 --> 00:06:08.383
还是我模糊了一个δ函数 这意味着原始图像并不模糊 

78
00:06:08.383 --> 00:06:14.450
所以这里有很多不明确的地方 我们不知道哪一个是对的 

79
00:06:14.450 --> 00:06:20.669
这也是我们想要估计滤波函数时的另一挑战 

80
00:06:20.669 --> 00:06:24.705
通常你的做法是 

81
00:06:24.705 --> 00:06:28.033
图片的模型和滤波器的模型 

82
00:06:28.033 --> 00:06:31.760
但这正显示了解决这个问题是多么困难 

83
00:06:31.760 --> 00:06:34.689
下面说一个预测的方法 

84
00:06:34.689 --> 00:06:38.483
正如我所说 高斯函数对模糊处理非常重要 

85
00:06:38.483 --> 00:06:42.609
它同样也经常用来做湍流的模型 

86
00:06:42.609 --> 00:06:46.070
这是一张NASA授权提供给我们的图片 

87
00:06:46.070 --> 00:06:49.531
我们一直在用的书里也有 

88
00:06:49.531 --> 00:06:54.790
这儿我们有同一幅图像分别在不同级别湍流下的照片 

89
00:06:54.790 --> 00:07:00.418
湍流强度由高到低 至少你可以在这儿看到模糊效应 

90
00:07:00.418 --> 00:07:06.047
通常湍流模型用高斯滤波器建立 

91
00:07:06.047 --> 00:07:10.652
它相当重要 我们讨论过高斯噪声分布 

92
00:07:10.652 --> 00:07:16.134
在数学意义上很重要 虽然他们在现实中并不存在 

93
00:07:16.134 --> 00:07:19.423
但在真实的物理场景中 

94
00:07:19.423 --> 00:07:24.760
高斯平滑 高斯滤波是非常符合实际的模型 

95
00:07:24.760 --> 00:07:29.140
因为很多情形都发生在物理相机中 

96
00:07:29.140 --> 00:07:33.785
另一种经常遇见的模糊叫做动态模糊 

97
00:07:33.785 --> 00:07:38.643
动态模糊的主要思想是当你拍一张照片的时候 

98
00:07:38.643 --> 00:07:42.677
如果目标是移动的 拍摄得到的照片将整合 

99
00:07:42.677 --> 00:07:47.958
所有进入感应器的光 所以如果目标在积分时间内移动的话 

100
00:07:47.958 --> 00:07:51.773
你就会得到一张模糊的照片 

101
00:07:51.773 --> 00:07:56.247
这里显示的图片就是这种情况 在我写公式之前 

102
00:07:56.247 --> 00:08:01.308
在这个例子中 这其实是一个仿真   

103
00:08:01.308 --> 00:08:06.149
我们用相机的移动代替目标的移动 基本思路就是考虑g、f函数 

104
00:08:06.149 --> 00:08:14.832
这里g函数实际就是一个从0到T的积分 

105
00:08:14.832 --> 00:08:21.231
t是相机在X方向上的积分时间   

106
00:08:21.231 --> 00:08:28.550
但关键是X方向上是运动的 

107
00:08:28.550 --> 00:08:33.080
所以称其为运动函数 记作x(t) 

108
00:08:33.080 --> 00:08:41.308
表示它是运动的 它在Y方向上也是运动的 

109
00:08:41.308 --> 00:08:45.760
写作y(t) 同时我对 t 积分 

110
00:08:45.760 --> 00:08:48.652
好 我现在做的并不是拍一张照片 

111
00:08:48.652 --> 00:08:52.637
这更像拍了很多照片 

112
00:08:52.637 --> 00:08:55.529
把它们加起来 而我看到的是相加后的照片 

113
00:08:55.529 --> 00:08:59.000
这可以通过这张拍摄的照片来仿真这个效果 

114
00:08:59.000 --> 00:09:04.291
平移 比如向右一点点 再次平移 

115
00:09:04.291 --> 00:09:10.703
再平移 然后把它们加起来 这就是这个公式所做的事情 

116
00:09:10.703 --> 00:09:14.156
将照片自身平移后的照片相加 

117
00:09:14.156 --> 00:09:20.240
这也是我们如何观察事物的   

118
00:09:20.240 --> 00:09:26.652
现在如果我们用数学的方法对两边进行傅里叶变换  利用傅里叶变换的性质 

119
00:09:26.652 --> 00:09:30.762
同样可以写出我们前面看到的那种形式 

120
00:09:30.762 --> 00:09:33.640
g 等于 h 卷积上 f 

121
00:09:33.640 --> 00:09:37.169
所以这里变换其实是一个滤波器   

122
00:09:37.169 --> 00:09:41.948
我这里就不写了 但是欢迎大家自己作为练习 

123
00:09:41.948 --> 00:09:46.249
一个非常简单的练习 如果你熟悉傅里叶变换的基本概念的话 

124
00:09:46.249 --> 00:09:51.028
正如我说的 将两边进行傅里叶变换 

125
00:09:51.028 --> 00:09:55.627
使用变换的性质 你将得到这个滤波器 

126
00:09:55.627 --> 00:09:59.759
当然它和速度有关 所以你可以想象 

127
00:09:59.759 --> 00:10:02.776
如果目标完全没有移动 就不会有模糊了 

128
00:10:02.776 --> 00:10:06.347
如果目标移动很多 就会有更多的模糊 

129
00:10:06.347 --> 00:10:09.180
所以这个滤波器将依赖于这些速度 

130
00:10:09.180 --> 00:10:15.517
再次提到那个问题 这个问题正显示了估计函数是多么困难 即我如何从这张照片来估计 

131
00:10:15.517 --> 00:10:19.260
估计我的原始图像和模糊效果 

132
00:10:19.260 --> 00:10:24.889
当然不是一个琐碎的事情 如果我知道这是动态模糊的结果 

133
00:10:24.889 --> 00:10:29.893
动态模糊概念是将多张图片相加求和 

134
00:10:29.893 --> 00:10:33.098
你需要估计一个 

135
00:10:33.098 --> 00:10:36.147
好 所以这不是一个琐碎的概念 

136
00:10:36.147 --> 00:10:39.978
如果我给你数字5 然后告诉你 

137
00:10:39.978 --> 00:10:45.298
这是两个数字之和 你不会知道是哪两个数字相加 

138
00:10:45.298 --> 00:10:49.075
除非我告诉你更多的信息 

139
00:10:49.075 --> 00:10:54.070
我们将会在后面的课程中讨论这些更加深入的话题 

140
00:10:54.070 --> 00:10:57.725
也就是关于图像复原 当我们再次回到这个估计问题上时 

141
00:10:57.725 --> 00:11:01.198
你将会看到不同的解决工具 例如稀疏矩阵 

142
00:11:01.198 --> 00:11:05.584
这就是为了说明这是一个复杂的问题 同时也是一个非常重要的问题 

143
00:11:05.584 --> 00:11:08.325
简单模型如高斯模糊模型或者动态模糊 

144
00:11:08.325 --> 00:11:13.320
模糊就是进行反相处理 

145
00:11:13.320 --> 00:11:16.802
动态模糊是非常非常重要的 

146
00:11:16.802 --> 00:11:22.619
我们需要能够通过反求它们 来还原得到非常锐化的原始图像 

147
00:11:22.619 --> 00:11:25.007
接下来 

148
00:11:25.007 --> 00:11:28.363
我们将看到一种实现方式 

149
00:11:28.363 --> 00:11:33.886
叫做维纳滤波 有一种方法能反求估计出滤波器或者噪声 

150
00:11:33.886 --> 00:11:37.592
我们将在下一个视频中看到 

151
00:11:37.592 --> 00:11:38.920
再见 

152
00:11:38.920 --> 00:11:39.620
谢谢大家