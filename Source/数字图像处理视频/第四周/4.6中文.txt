大家好 欢迎回到视频和图像处理课程 我们将要继续图像复原的内容 目前为止 我们处理了噪声相关内容 接下来要学习滤波部分 请记住这是 我们讨论过的完全退化模型 我们将要对图像过滤 然后再加上噪声 现在假设没有滤波 只有噪声 通常来说 这里我们会看到的是g(x,y) 观察到的图像等于f(x,y) 和h(x,y)的卷积加上噪声 就像以前讨论过的 我们在图像中加入的噪声其实就是一种随机变化 我们已经知道如何来估计噪声 现在让我们来看看如何估计这个模糊函数 通常这里的函数h被称作模糊函数 这比估计噪声难得多 但在我们讨论为什么这很重要之前 让我通过一个非常非常简单的公式来说明为什么这很重要 为了方便起见 假设有一刻我们没有噪声 因此这里没有噪声了 我们将对其使用傅里叶变换 傅里叶变换结果是G(u,v)等于F(u,v)乘以H(u,v) 对于你们中熟悉傅里叶变换的人来说 这很容易 对于不熟悉的人 请先跟着我说的听一下 在傅里叶变换中 卷积变成了乘积 这样我们就将图片变换到了另一个域中 在这个域中卷积转化成了乘积 来看看我们得到了什么 我们想要估计原始图像 所以我们做除法 因此很好 我们做到了  F(u,v) 等于 观察图像 (的频谱函数) 退化的图片除以滤波器 如果我们能够估计滤波器 一切都变得简单了 我们获取观察到的图片 并进行傅里叶变换 对估计的滤波器进行傅里叶变换 我们将一个除以另一个 我们得到了原始图像 它经过了傅里叶变换 再做逆变换 我们重新得到了图像 这就是逆滤波 (inverse filtering) 有一些基本问题 尤其是因为我们无法保证 H(u,v)总是非零的 对于真实场景来说，它存在一些零点 UV取某些值时它会非常接近零 但是这个整体思路是非常好的 如果我们知道了退化函数 就能尝试做逆变换 这很酷 我的意思是 我们想要尝试去估计它 (退化函数) 就像我说的 估计它是很难很难的 比估计噪声难得多 让我们来看看能估计它的一些例子 还有一些我们现实中会遇到的 h函数 比如 这周早些时候我提到过的一个例子 什么是模糊 模糊表示我观察到的图像 是原始图像卷积上 高斯函数 这些高斯函数均值为零 方差或标准差不确定 我们已经知道基本的高斯函数 这个e指数是二次项函数 (具体公式查维基) 我们在讨论噪声的时候看到过这个高斯函数 它会模糊图像  现在如果你知道有某个高斯函数 正在影响你的观察 这就是观察到的图片 这是g函数 如果你知道 g 是 f 通过高斯滤波器后的结果 那么你就会知道 f 实际上是一个点 一个 δ函数 也就是一个点 比如在这个简单的例子中 你能估计模糊函数 实际上这不难 因为卷积有一个简单性质 如果 f 是 δ函数 它和G做卷积 结果得到 G 即高斯函数 这是个很简单的例子 在这个特定例子中可以估计出h函数 在这个例子里我们正好有一个高斯滤波器 这乍听起来也许令人奇怪 我是说 我怎么知道图片中有一个点 也就是是一个δ函数的？ 但事实上这并不荒谬 因为我们可以利用这个来校准系统 如果我们知道镜头是模糊的 那么可以人为地放一张图片 图片上有 δ函数 然后我估计模糊程度 所以这对于调整和评估镜头工作情况很有用 这非常重要 现在我将要告诉你们一些别的事情来增长你们的知识 以及为什么这是一个难求的函数 一个难预测的函数 如果G的卷积等于G和F的卷积 你也许会有疑问F是我的原始图像吗 我的原始图像是一个δ函数吗 是我模糊了一个高斯函数吗？ 或者换个问法 我的原始图像是一个高斯函数吗？ 还是我模糊了一个δ函数 这意味着原始图像并不模糊 所以这里有很多不明确的地方 我们不知道哪一个是对的 这也是我们想要估计滤波函数时的另一挑战 通常你的做法是 图片的模型和滤波器的模型 但这正显示了解决这个问题是多么困难 下面说一个预测的方法 正如我所说 高斯函数对模糊处理非常重要 它同样也经常用来做湍流的模型 这是一张NASA授权提供给我们的图片 我们一直在用的书里也有 这儿我们有同一幅图像分别在不同级别湍流下的照片 湍流强度由高到低 至少你可以在这儿看到模糊效应 通常湍流模型用高斯滤波器建立 它相当重要 我们讨论过高斯噪声分布 在数学意义上很重要 虽然他们在现实中并不存在 但在真实的物理场景中 高斯平滑 高斯滤波是非常符合实际的模型 因为很多情形都发生在物理相机中 另一种经常遇见的模糊叫做动态模糊 动态模糊的主要思想是当你拍一张照片的时候 如果目标是移动的 拍摄得到的照片将整合 所有进入感应器的光 所以如果目标在积分时间内移动的话 你就会得到一张模糊的照片 这里显示的图片就是这种情况 在我写公式之前 在这个例子中 这其实是一个仿真 我们用相机的移动代替目标的移动 基本思路就是考虑g、f函数 这里g函数实际就是一个从0到T的积分 t是相机在X方向上的积分时间 但关键是X方向上是运动的 所以称其为运动函数 记作x(t) 表示它是运动的 它在Y方向上也是运动的 写作y(t) 同时我对 t 积分 好 我现在做的并不是拍一张照片 这更像拍了很多照片 把它们加起来 而我看到的是相加后的照片 这可以通过这张拍摄的照片来仿真这个效果 平移 比如向右一点点 再次平移 再平移 然后把它们加起来 这就是这个公式所做的事情 将照片自身平移后的照片相加 这也是我们如何观察事物的 现在如果我们用数学的方法对两边进行傅里叶变换  利用傅里叶变换的性质 同样可以写出我们前面看到的那种形式 g 等于 h 卷积上 f 所以这里变换其实是一个滤波器 我这里就不写了 但是欢迎大家自己作为练习 一个非常简单的练习 如果你熟悉傅里叶变换的基本概念的话 正如我说的 将两边进行傅里叶变换 使用变换的性质 你将得到这个滤波器 当然它和速度有关 所以你可以想象 如果目标完全没有移动 就不会有模糊了 如果目标移动很多 就会有更多的模糊 所以这个滤波器将依赖于这些速度 再次提到那个问题 这个问题正显示了估计函数是多么困难 即我如何从这张照片来估计 估计我的原始图像和模糊效果 当然不是一个琐碎的事情 如果我知道这是动态模糊的结果 动态模糊概念是将多张图片相加求和 你需要估计一个 好 所以这不是一个琐碎的概念 如果我给你数字5 然后告诉你 这是两个数字之和 你不会知道是哪两个数字相加 除非我告诉你更多的信息 我们将会在后面的课程中讨论这些更加深入的话题 也就是关于图像复原 当我们再次回到这个估计问题上时 你将会看到不同的解决工具 例如稀疏矩阵 这就是为了说明这是一个复杂的问题 同时也是一个非常重要的问题 简单模型如高斯模糊模型或者动态模糊 模糊就是进行反相处理 动态模糊是非常非常重要的 我们需要能够通过反求它们 来还原得到非常锐化的原始图像 接下来 我们将看到一种实现方式 叫做维纳滤波 有一种方法能反求估计出滤波器或者噪声 我们将在下一个视频中看到 再见 谢谢大家