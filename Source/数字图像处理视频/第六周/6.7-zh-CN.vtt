WEBVTT

1
00:00:00.000 --> 00:00:04.211
【未完成版本】
欢迎回来 现在我们将用一个例子说明 

2
00:00:04.211 --> 00:00:09.708
变分法在图像处理中的应用 这些技术 

3
00:00:09.708 --> 00:00:15.061
都在前面的视频中出现过 让我们开始吧 

4
00:00:15.061 --> 00:00:20.129
我们将使用到 基于偏微分方程的图像处理领域中 

5
00:00:20.129 --> 00:00:24.841
最著名的方程之一 

6
00:00:24.841 --> 00:00:27.982
那就是 各向异性扩散 (Anisotropic Diffusion) 

7
00:00:27.982 --> 00:00:32.108
这是什么呢？ 回忆一下 在我们讨论 

8
00:00:32.108 --> 00:00:38.251
高斯滤波和图像平均时 曾提到过 

9
00:00:38.251 --> 00:00:42.543
这两种方法相当于将像素值扩散到整幅图像 

10
00:00:42.543 --> 00:00:46.583
那样做的结果是模糊的图像 

11
00:00:46.583 --> 00:00:52.189
因为如果图像中有边界 而我们是跨边界求平均 

12
00:00:52.189 --> 00:00:59.013
使得边界两侧原本差异巨大的像素值进行混合 也就产生了 

13
00:00:59.013 --> 00:01:03.644
模糊 那是各向同性平滑(Isotropic Smoothing) 

14
00:01:03.644 --> 00:01:09.331
各向同性平滑是不考虑所平滑的范围内是否有边界 

15
00:01:09.331 --> 00:01:14.124
而各向异性平滑或 

16
00:01:14.124 --> 00:01:20.380
扩散要做的 是考虑对象中的边界后 在边界的某一侧对 

17
00:01:20.380 --> 00:01:26.511
像素值进行平均 

18
00:01:26.511 --> 00:01:30.737
如此 平均只会发生在值较接近的像素群中   

19
00:01:30.737 --> 00:01:36.206
这本身就是去噪声或图像增强的过程 

20
00:01:36.206 --> 00:01:41.344
被平均的像素值并无巨大差异 

21
00:01:41.344 --> 00:01:44.990
如何实现 使用方程来实现 

22
00:01:44.990 --> 00:01:50.684
就是这里的偏微分方程 在看方程之前 

23
00:01:50.684 --> 00:01:54.480
先看图像 这是原图 

24
00:01:54.480 --> 00:02:00.570
假如对原图使用高斯平滑或平均 我们知道图像会 

25
00:02:00.570 --> 00:02:04.909
变模糊 因为高斯平滑 

26
00:02:04.909 --> 00:02:10.720
是不区分边界的对所有像素值进行平均 所以会模糊对象的边界 这里可以看到结果 

27
00:02:10.720 --> 00:02:17.023
如果我们不想模糊边界 那只能先区分边界 并只对边界的某一侧像素 

28
00:02:17.023 --> 00:02:23.248
进行处理 而不再涉及这个方向 这样一来得到的边界会更加锐利 

29
00:02:23.248 --> 00:02:26.983
我们消除了对象内部的噪点   

30
00:02:26.983 --> 00:02:33.364
就是这张脑部MRI(核磁共振图像)中灰色的部分 可以看出 

31
00:02:33.364 --> 00:02:39.356
现在的图像平滑多了 但同时边界仍然十分明晰 

32
00:02:39.356 --> 00:02:43.625
这就是两者的区别 

33
00:02:43.625 --> 00:02:50.133
上红色背景的是各向同性扩散 热量方程 

34
00:02:50.133 --> 00:02:54.201
之前我们已经提到过 

35
00:02:54.201 --> 00:02:59.733
我们将使用变分法对方程进行推导 

36
00:02:59.733 --> 00:03:05.997
在求二阶导数之前已经加上了各向同性 

37
00:03:05.997 --> 00:03:10.146
二阶导数是分散函数 在此提醒大家 

38
00:03:10.146 --> 00:03:17.860
图像的拉普拉斯算子是梯度的分散函数 

39
00:03:17.860 --> 00:03:24.316
此前已经学过如何定义梯度和分散函数 

40
00:03:24.316 --> 00:03:30.724
在我们计算梯度和分散函数之前 我们先引入一个函数 

41
00:03:30.724 --> 00:03:35.246
这个函数与之前用作计数器的函数十分类似 

42
00:03:35.246 --> 00:03:39.829
比如这个函数可能是基于梯度的函数 我们在下一张中将看到   

43
00:03:39.829 --> 00:03:42.000
这个函数可能会说 

44
00:03:42.000 --> 00:03:45.330
等一下 如果某处梯度变化巨大 则在此处 

45
00:03:45.330 --> 00:03:47.233
停止扩散过程 

46
00:03:47.233 --> 00:03:52.398
这使得扩散只能在梯度没有巨大变化的某些方向上进行 

47
00:03:52.398 --> 00:03:56.000
而在出现边界 也就是梯度出现巨大变化的某些方向上   

48
00:03:56.000 --> 00:04:00.349
不会进行平均或只有减弱的平均 

49
00:04:00.349 --> 00:04:03.475
这些方向 也是我们保留锐利边界的地方 

50
00:04:03.475 --> 00:04:08.368
我们在对对象内部进行平滑降噪的同时保留了清晰锐利的边界 

51
00:04:08.368 --> 00:04:13.604
这正是我们想要的 这些方程是变分法推导出的 

52
00:04:13.604 --> 00:04:19.988
任意定义一个关于 

53
00:04:19.988 --> 00:04:22.460
梯度的函数 

54
00:04:22.460 --> 00:04:31.367
这是之前见过的 取u或u的导数的函数 

55
00:04:31.367 --> 00:04:36.340
梯度是图像的导数   

56
00:04:36.340 --> 00:04:40.939
rho在这里相当于f 

57
00:04:40.939 --> 00:04:45.522
定义任意关于梯度大小的函数 

58
00:04:45.522 --> 00:04:49.784
使用Euler-Lagrange方程展开 得到这个式子 

59
00:04:49.784 --> 00:04:55.896
这是这个式子的Euler-Lagrange变换 如果你严格按照之前视频中的步骤 

60
00:04:55.896 --> 00:05:01.766
来做的话 记住 偏微分方程是通过对图像进行 

61
00:05:01.766 --> 00:05:07.556
Euler-Lagrange变形得到的 

62
00:05:07.556 --> 00:05:11.581
当这个不再变化时   

63
00:05:11.581 --> 00:05:17.861
就解出了Euler-Lagrange方程 得到了 可能仅是局部的 

64
00:05:17.861 --> 00:05:21.564
 使得方程值最小的解  

65
00:05:21.564 --> 00:05:27.764
再重复一遍 仅进行之前视频中讲过的Euler-Lagrange变换   

66
00:05:27.764 --> 00:05:32.353
用几个具体的rho函数为例 

67
00:05:32.353 --> 00:05:41.063
例如 rho(a)=a^2   

68
00:05:41.063 --> 00:05:47.035
要最小化的是 

69
00:05:47.035 --> 00:05:53.757
梯度大小的平方 然后是Euler-Lagrange变换 

70
00:05:53.757 --> 00:05:58.954
rho(a)=a^2 rho‘等于2a 

71
00:05:58.954 --> 00:06:02.681
将式子中的rho‘替换为2 x rho的自变量 

72
00:06:02.681 --> 00:06:08.322
也就是梯度 

73
00:06:08.322 --> 00:06:12.528
得到这个式子 

74
00:06:12.528 --> 00:06:18.999
Euler-Lagrange方程为I(t) 

75
00:06:18.999 --> 00:06:24.739
等于rho‘ 也就是2a的分散函数 

76
00:06:24.739 --> 00:06:31.257
可以忽略2 因为它仅仅是个标量 所以a 

77
00:06:31.257 --> 00:06:31.257
乘以 

78
00:06:32.619 --> 00:06:40.694
a在此处为梯度大小的绝对值 

79
00:06:40.694 --> 00:06:44.294
这是这部分 

80
00:06:44.294 --> 00:06:49.147
这部分不变 这部分等于rho‘ 

81
00:06:49.147 --> 00:06:58.083
分子分母相同消除 式子变为自变量为梯度的分散函数 

82
00:06:58.083 --> 00:07:03.785
也就是拉普拉斯算子 在这个例子中 Euler-Lagrange 

83
00:07:03.785 --> 00:07:08.607
方程与热量方程一致 是各向同性 

84
00:07:08.607 --> 00:07:14.392
是各向同性平滑 

85
00:07:14.392 --> 00:07:18.637
梯度大小绝对值的平方 

86
00:07:18.637 --> 00:07:25.019
Euler-Lagrange方程 也是一般的热量方程 

87
00:07:25.019 --> 00:07:28.848
是各向同性扩散 

88
00:07:28.848 --> 00:07:35.060
让我们再来看一个非常有趣的例子 

89
00:07:35.060 --> 00:07:44.588
令rho(a)=a 

90
00:07:44.588 --> 00:07:52.062
函数等于自变量 也可以使它等于a的绝对值 但我们现在 

91
00:07:52.062 --> 00:07:57.372
不纠缠这些细节 rho‘＝1 

92
00:07:57.372 --> 00:08:00.814
也就是说 现在是对 

93
00:08:00.814 --> 00:08:05.664
梯度的绝对值求最小值 

94
00:08:05.664 --> 00:08:09.705
不再是对梯度平方求最小值了 是梯度的绝对值 

95
00:08:09.705 --> 00:08:14.020
而不是平方 这个式子的 

96
00:08:14.020 --> 00:08:19.498
Euler-Lagrange方程是什么 rho‘现在是常数 

97
00:08:19.498 --> 00:08:26.071
现在变为被梯度自身正则化的梯度的分散函数 

98
00:08:26.071 --> 00:08:33.493
我得到的不再是热量方程 而是一个正则因子 

99
00:08:33.493 --> 00:08:40.821
这个因子说 等一下  如果梯度太陡 你就跨过了梯度 

100
00:08:40.821 --> 00:08:45.103
先缓一缓 从而把这些边界保留下来 

101
00:08:45.103 --> 00:08:49.766
这是各向异性扩散的一个例子 

102
00:08:49.766 --> 00:08:57.990
这方法被成为全变差 (Total variation）也就是这个式子 

103
00:08:57.990 --> 00:09:04.634
现在我想让你们思考一下 

104
00:09:04.634 --> 00:09:11.258
这部分是什么 在前面的视频中学过 

105
00:09:11.258 --> 00:09:16.310
这是图像i中水平线的曲率 

106
00:09:16.310 --> 00:09:23.648
之前我们把它作为泛函数使用 当时我们使用的是函数phi 

107
00:09:23.648 --> 00:09:28.801
这是图像中每条水平线的曲率 

108
00:09:28.801 --> 00:09:33.017
我们将图像抽象为一个平面 

109
00:09:33.017 --> 00:09:38.951
对图像进行变形 对图像使用各向异性扩散 

110
00:09:38.951 --> 00:09:45.262
扩散的方向是图像中水平线的曲率 

111
00:09:45.262 --> 00:09:51.151
得到的就是各向异性扩散 

112
00:09:51.151 --> 00:09:54.652
这个联系非常有趣 

113
00:09:54.652 --> 00:10:00.064
我们讲过曲线演化 也讲过基于曲率的运动 

114
00:10:00.064 --> 00:10:05.714
这就是其中一种 大体上 图像是沿着水平线的曲率 

115
00:10:05.714 --> 00:10:10.883
来移动的 我们并不关心 

116
00:10:10.883 --> 00:10:16.332
图像中的水平线 方程也不是从水平线推导出来的 

117
00:10:16.332 --> 00:10:19.825
我们是使用全变差的Euler-Lagrange变换推导出方程的 

118
00:10:19.825 --> 00:10:24.925
但它们却被联系起来 联系点是无论是按照水平线的曲率 

119
00:10:24.925 --> 00:10:30.444
还是按照Euler-Lagrange方程来移动    

120
00:10:30.444 --> 00:10:34.380
它们都是按照曲率方程来移动 什么的曲率？ 

121
00:10:34.380 --> 00:10:37.935
是图像中水平线的曲率 

122
00:10:37.935 --> 00:10:43.885
这是曲线演化 水平线和变分法之间一个饶有兴味的联系 

123
00:10:43.885 --> 00:10:49.527
这个联系本身也是各向异性扩散的一个非常美妙的方程 

124
00:10:49.527 --> 00:10:52.784
这也是在图像处理中 

125
00:10:52.784 --> 00:10:57.557
使用变分法的著名例子之一 

126
00:10:57.557 --> 00:11:02.656
我们将在下个视频中对这周进行小结 

127
00:11:02.656 --> 00:11:06.383
将涉及一点活动轮廓模型 也是使用曲线 

128
00:11:06.383 --> 00:11:11.417
演化和变分法的主战场 就像我们以前讨论过的那样 

129
00:11:11.417 --> 00:11:14.948
这些将在下个视频中看到 非常感谢 

130
00:11:14.948 --> 00:11:17.433
非常期待 谢谢