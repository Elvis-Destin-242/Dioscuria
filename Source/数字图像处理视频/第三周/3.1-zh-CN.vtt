WEBVTT

1
00:00:00.000 --> 00:00:04.726
大家好 欢迎来到图像和视频处理第三周的课程 

2
00:00:04.726 --> 00:00:08.570
你们现在看到 我在一个非常暗的房间里 

3
00:00:08.570 --> 00:00:13.737
你们应该可以看到我身后的杜克教堂 但是有一些细节你们是看不到的 

4
00:00:13.737 --> 00:00:16.447
比如说我身上穿的衣服的颜色 

5
00:00:16.447 --> 00:00:21.299
或者看向我的桌子 这里非常的暗 你们基本上看不到什么 

6
00:00:21.299 --> 00:00:24.072
如果我们拿到这样一张图像要怎么处理？ 

7
00:00:24.072 --> 00:00:26.970
如果我们拿到一个背景非常暗的视频又要怎么处理？ 

8
00:00:26.970 --> 00:00:30.058
我们在晚上拍照的时候 这种情况经常发生 

9
00:00:30.058 --> 00:00:33.678
或者没有理想的采光 

10
00:00:33.678 --> 00:00:36.815
图像就可能太暗或者太亮 有时候噪点太多 

11
00:00:36.815 --> 00:00:42.108
我们这周要学的就是如何改善这些图像 

12
00:00:42.108 --> 00:00:46.225
如何进行图像增强 我们从最简单的操作开始 

13
00:00:46.225 --> 00:00:49.716
这些操作会帮助提高对比度 

14
00:00:49.716 --> 00:00:54.208
消除噪点 我们在本周最后的课程 

15
00:00:54.208 --> 00:00:59.295
会讲一些更先进的技术 这些都是现今最顶尖的技术 

16
00:00:59.295 --> 00:01:03.193
而在课程的最后 

17
00:01:03.193 --> 00:01:08.016
大概是第七周或第八周的时候 我们也会回过头来 

18
00:01:08.016 --> 00:01:11.650
讲解图像增强中非常非常前沿的技术 

19
00:01:11.650 --> 00:01:16.759
在这周和下周中 我们还会做一些线上的实时演示 

20
00:01:16.759 --> 00:01:21.682
在这里我会教你们一些背景知识 

21
00:01:21.682 --> 00:01:26.293
然后我们一起运行一些不同的软件平台 来实践一下这些操作 

22
00:01:26.293 --> 00:01:29.974
就在我的电脑上 大家可以看到 

23
00:01:29.974 --> 00:01:32.738
它们在实践中如何操作的 

24
00:01:32.738 --> 00:01:37.739
我们还会介绍一些在线的视频小测试 

25
00:01:37.739 --> 00:01:42.805
我会在视频中有些停顿 这样大家就可以思考一下我提的问题 

26
00:01:42.805 --> 00:01:46.424
这并不会对大家最后拿到证书产生影响 

27
00:01:46.424 --> 00:01:51.754
我只是想要给大家一点时间 

28
00:01:51.754 --> 00:01:56.953
在我给出答案前思考这些问题 就像平时上课一样 

29
00:01:56.953 --> 00:01:59.980
我会停下让学生们来想一想 

30
00:01:59.980 --> 00:02:04.860
我先去把灯打开 再来给大家讲课和板书 

31
00:02:04.860 --> 00:02:09.490
并给大家解释图像增强、对比度增强 

32
00:02:09.490 --> 00:02:13.808
以及图像去噪的基本原理 所以大家等我一下 

33
00:02:13.808 --> 00:02:17.997
我去开个灯 马上就回来 

34
00:02:17.997 --> 00:02:21.980
现在我把灯打开了 大家就能看到一些细节了 

35
00:02:21.980 --> 00:02:26.831
大家可能看不太清背景了 

36
00:02:26.831 --> 00:02:29.820
但是可以看到屋内的东西 

37
00:02:29.820 --> 00:02:35.174
我要给大家讲的就是如何在电脑中用数字化方式开灯 

38
00:02:35.174 --> 00:02:37.816
所以如果照片已经照好了 

39
00:02:37.816 --> 00:02:42.538
大家又不能回到之前的场景重新照 

40
00:02:42.538 --> 00:02:47.583
我想要利用图像和视频处理软件来“开灯” 现在我们就要开始了 

41
00:02:47.583 --> 00:02:52.930
我们要从非常简单的操作开始 

42
00:02:52.930 --> 00:02:56.545
都是一些直方图修正 或者说是逐点运算 

43
00:02:56.545 --> 00:03:00.620
这个图表明了它的基本思想 

44
00:03:00.620 --> 00:03:07.592
图像中的每一个像素 都会根据一个特定的方程 

45
00:03:07.592 --> 00:03:12.020
改变它的值 因此 

46
00:03:12.020 --> 00:03:17.360
这里的像素值会改变并移动到一个新的图像中 

47
00:03:17.360 --> 00:03:22.090
但它只会根据自身的像素值来改变 

48
00:03:22.090 --> 00:03:26.868
而不会被图像中其它任何部分的像素影响到 

49
00:03:26.868 --> 00:03:30.678
这是第三周课程中的第一部分 

50
00:03:30.678 --> 00:03:36.102
后面我们将了解如何利用图像中的其它信息改变像素值 

51
00:03:36.102 --> 00:03:40.686
但我们要先从非常简单的逐点运算开始 

52
00:03:40.686 --> 00:03:44.690
这里输入值是一个特定的像素值 

53
00:03:44.690 --> 00:03:47.402
输出值也是一个特定的像素值 

54
00:03:47.402 --> 00:03:50.759
这里也一样 例如这个运算中 

55
00:03:50.759 --> 00:03:57.060
所有小于 k 的像素值都会变成 0 而大于k 的像素值会变成 1 

56
00:03:57.060 --> 00:04:00.665
或者是图像中的最大值 

57
00:04:00.665 --> 00:04:04.414
这里进行了 阈值处理 

58
00:04:04.414 --> 00:04:10.507
所以现在要确立一个一维函数 

59
00:04:10.507 --> 00:04:15.003
来将输入值转化为输出值 现在大家来看看一下几个例子 

60
00:04:15.003 --> 00:04:18.720
这里有一些图示 

61
00:04:18.720 --> 00:04:22.653
一些变换操作 比如反对数 

62
00:04:22.653 --> 00:04:29.295
当然我们先从恒等变换开始 输入值与输出值相等 

63
00:04:29.295 --> 00:04:35.500
这就是恒等变换 如果我们把输出值写作 s 

64
00:04:35.500 --> 00:04:41.070
那么正比函数的表达式是 s = r 输出值等于输入值 

65
00:04:41.070 --> 00:04:47.450
我们没有改变图像 还有对数运算 

66
00:04:47.450 --> 00:04:56.376
比如输出值是一个常数乘以输入值的对数 

67
00:04:56.376 --> 00:05:03.378
我们一般会加1 因为如果输入是0 

68
00:05:03.378 --> 00:05:06.367
我们就没有办法取0的对数 所以我们这样处理 

69
00:05:06.367 --> 00:05:11.399
这就是要做的运算 不管输入的灰度值是什么 

70
00:05:11.399 --> 00:05:16.138
我们都会将其转化为输出值 还有反转 画在了这里 

71
00:05:16.138 --> 00:05:19.711
我想让大家想一下 

72
00:05:19.711 --> 00:05:25.617
什么函数可以表示反转 

73
00:05:25.617 --> 00:05:30.880
考虑到图像中的值是从0到L的 

74
00:05:30.880 --> 00:05:35.501
最小值是0 最大值是L 

75
00:05:35.501 --> 00:05:40.600
函数会是什么样的呢？ 我想把 s 写成 

76
00:05:40.600 --> 00:05:44.187
一个关于 r 的函数 

77
00:05:44.187 --> 00:05:49.170
怎样的函数才能对图像进行反转？ 

78
00:05:49.170 --> 00:05:52.292
 输入的最大值会变成0 而最小值也就是0  

79
00:05:52.292 --> 00:05:57.607
会变成 L 所以大家来想一下 

80
00:05:57.607 --> 00:06:01.128
这是一个非常简单的练习 用来展示一下 

81
00:06:01.128 --> 00:06:06.244
这种运算有多么简单 并且我们等一下会看到 它又是多么强大 

82
00:06:06.244 --> 00:06:12.249
现在我问问大家 

83
00:06:12.249 --> 00:06:16.223
如何构建这个函数 

84
00:06:16.223 --> 00:06:23.900
这非常简单 我们想要输出值成为输入值的反转 

85
00:06:23.900 --> 00:06:29.295
那么 s = L - r 其中 L为最大值 

86
00:06:29.295 --> 00:06:34.691
这样当 r等于 L的时候 s就会变成0 即 L-L 

87
00:06:34.691 --> 00:06:41.332
当r等于0 那么s就变成了L 也就是最大值 

88
00:06:41.332 --> 00:06:47.977
所以这是一个非常非常简单的将灰度值反转的运算 

89
00:06:47.977 --> 00:06:53.455
注意 这里所有的运算 实际上都只关心灰度值 

90
00:06:53.455 --> 00:06:56.844
这里并不关心像素在图像中的位置 

91
00:06:56.844 --> 00:07:00.592
而只关心像素值 

92
00:07:00.592 --> 00:07:07.540
只关心图像的灰度值是多少 这里有一个例子 

93
00:07:07.540 --> 00:07:14.176
我们刚才写的这个 s = L-r 的方程 

94
00:07:14.176 --> 00:07:20.812
取了所有像素的反转值 所以会得到反转图像 

95
00:07:20.812 --> 00:07:27.000
我们可以看到 

96
00:07:27.000 --> 00:07:33.010
有一些细节在反转图像中比在原图中更容易辨认 

97
00:07:33.010 --> 00:07:35.782
这是为什么？ 

98
00:07:35.782 --> 00:07:40.973
记得之前我们讨论过视觉系统的一些特点 

99
00:07:40.973 --> 00:07:44.741
我们对于某些对比更加敏感 

100
00:07:44.741 --> 00:07:49.150
在不同的背景下我们可以看得更加清楚 

101
00:07:49.150 --> 00:07:54.622
我们看到了有一些对比在深色区域下更加清晰 

102
00:07:54.622 --> 00:07:58.493
而有一些对比在浅色区域中会显得不同 

103
00:07:58.493 --> 00:08:03.298
所以图像反转 可能会帮助我们 

104
00:08:03.298 --> 00:08:08.170
看清在原图中很难注意到的东西 

105
00:08:08.170 --> 00:08:13.186
这是很简单的例子 这些操作还有一个重要性质 

106
00:08:13.186 --> 00:08:18.281
即这些运算是可逆的 如果从这里开始 

107
00:08:18.281 --> 00:08:23.220
我们并没有破坏任何信息 因而可以做简单的逆向运算回到原图 

108
00:08:23.220 --> 00:08:28.778
我们在这周后续课程中会看到 这并不总是可行的 

109
00:08:28.778 --> 00:08:33.160
但是这种特殊的运算是可以的 

110
00:08:33.160 --> 00:08:40.029
另外一个非常重要的运算是指数函数 

111
00:08:40.029 --> 00:08:46.378
我写在这里 输出值s 会变成一个常数乘以输入值的 γ次方 

112
00:08:46.378 --> 00:08:52.813
这里的基本思路是 根据特定的 γ 

113
00:08:52.813 --> 00:08:59.596
我们会得到不同的函数 来将输入值转换成输出值 

114
00:08:59.596 --> 00:09:03.683
通常把这称作伽马校正 

115
00:09:03.683 --> 00:09:09.604
这是一个在显示器中非常常用的函数 由于显示器的一些特性 

116
00:09:09.604 --> 00:09:15.533
如果不对图像做伽马校正 

117
00:09:15.533 --> 00:09:18.650
那么图像会显得特别暗 所以如果这是我的图像 

118
00:09:18.650 --> 00:09:23.941
那么它会变得非常暗 这样会很难看清其中的细节 

119
00:09:23.941 --> 00:09:27.156
这是显示器的一些特性造成的 

120
00:09:27.156 --> 00:09:30.773
所以有时在将图片发送到显示器之前 

121
00:09:30.773 --> 00:09:35.260
需要做伽马校正 

122
00:09:35.260 --> 00:09:40.418
如果对图像做了伽马校正 再发送到显示屏 

123
00:09:40.418 --> 00:09:45.040
伽马校正就会抵消 

124
00:09:45.040 --> 00:09:50.402
由于显示器的特性而产生的变暗的效果 

125
00:09:50.402 --> 00:09:53.725
所以这是非常有用并且非常常见的运算 

126
00:09:53.725 --> 00:09:58.118
基本上每个显示器 

127
00:09:58.118 --> 00:10:02.399
在显示之前都会做伽马校正 

128
00:10:02.399 --> 00:10:08.471
但是伽马校正 或者说这个指数函数 

129
00:10:08.471 --> 00:10:13.608
一般来说 在延展像素值时 也非常有用 

130
00:10:13.608 --> 00:10:18.657
还记得直方图吧 它显示了像素的分布 

131
00:10:18.657 --> 00:10:21.725
例如 我们来看看这个图像 

132
00:10:21.725 --> 00:10:27.424
大多数的像素会聚集在较亮的值上 

133
00:10:27.424 --> 00:10:30.420
如果我们要画直方图 

134
00:10:30.420 --> 00:10:31.567
我们以后会经常画直方图 

135
00:10:31.567 --> 00:10:36.946
基本上从下个视频开始 这周会画很多直方图 

136
00:10:36.946 --> 00:10:40.101
所以 如果我们要画这个图像的像素分布 

137
00:10:40.101 --> 00:10:45.623
那么在这个区域的像素会占很多 

138
00:10:45.623 --> 00:10:48.564
因为我们可以看到这个图像中 

139
00:10:48.564 --> 00:10:52.150
有很多高像素值的点 画面很亮 

140
00:10:52.150 --> 00:10:57.815
所以有了伽马校正 我们就可以延展这个直方图 

141
00:10:57.815 --> 00:11:03.194
这里用了不同的 γ 值 但是我认为这张图最直观 

142
00:11:03.194 --> 00:11:07.911
首先 我们可以看到这里生成了一个更好的图像 

143
00:11:07.911 --> 00:11:11.665
比这个图像看起来要好 

144
00:11:11.665 --> 00:11:17.700
并且它还会帮助我们更好地看清一些细节 

145
00:11:17.700 --> 00:11:23.000
虽然大家的显示器中都在做各自的伽马校正 但我希望你们都能看得清楚 

146
00:11:23.000 --> 00:11:27.859
所以大家可以更清楚地看到这里、这里和其它不同区域中的细节 

147
00:11:27.859 --> 00:11:32.651
有时候可能校正过度 

148
00:11:32.651 --> 00:11:35.526
所以大家可能会选择不同的 γ 值来做伽马校正 

149
00:11:35.526 --> 00:11:38.880
大家可能会觉得 这个区域 

150
00:11:38.880 --> 00:11:41.114
有很多细节其实看不清 

151
00:11:41.114 --> 00:11:45.199
所以或许大家会用另外一个 γ 值 就像这里展示的 

152
00:11:45.199 --> 00:11:48.262
这些是用不同 γ 值得出的图像 

153
00:11:48.262 --> 00:11:53.433
大家可以只对图像的一些区域做这些运算 

154
00:11:53.433 --> 00:11:57.773
而不用应用到整个图像 大家可以只对图像的一些区域做反转 

155
00:11:57.773 --> 00:12:00.390
也可以只对图像的一些区域 

156
00:12:00.390 --> 00:12:03.901
做伽马校正或者使用指数函数 

157
00:12:03.901 --> 00:12:08.050
大家并不用将这些运算应用在所有地方 可以只在局部应用 

158
00:12:08.050 --> 00:12:12.471
所以这是一个非常简单的运算 

159
00:12:12.471 --> 00:12:15.637
并且可以立即给我们一个更清晰的图像 

160
00:12:15.637 --> 00:12:19.629
记住在这个视频开端 我的视频是非常暗的 

161
00:12:19.629 --> 00:12:24.240
这就意味着像素值的分布 

162
00:12:24.240 --> 00:12:28.786
是集中在这里的 如果这是直方图分布 

163
00:12:28.786 --> 00:12:34.950
这种运算会帮助我们延展这个分布 

164
00:12:34.950 --> 00:12:41.192
这样会更好地利用显示屏中的资源 可以用到0到255整个范围 

165
00:12:41.192 --> 00:12:47.433
而不仅仅是较暗或者较亮部分的值 

166
00:12:47.433 --> 00:12:50.670
再次强调 这是一个非常非常简单的运算 

167
00:12:50.670 --> 00:12:58.222
这些运算的设计中有很多技巧 

168
00:12:58.222 --> 00:13:03.331
但是有了经验 我们会慢慢理解需要做什么 

169
00:13:03.331 --> 00:13:08.745
这里是另外一个像素值拉伸的例子 这里依旧是输入值 r 

170
00:13:08.745 --> 00:13:14.235
这里是输出值s 如果你的像素值是在 

171
00:13:14.235 --> 00:13:17.590
这个点和这个点之间 那么基本上不会发生什么 

172
00:13:17.590 --> 00:13:20.339
这里是原图像 

173
00:13:20.339 --> 00:13:23.357
比较暗的像素值不会有什么变化 

174
00:13:23.357 --> 00:13:28.320
比较亮的像素值也不会有什么变化 

175
00:13:28.320 --> 00:13:34.681
而介于中间的像素值 

176
00:13:34.681 --> 00:13:41.114
会被拉伸 它的斜率远大于 1   

177
00:13:41.114 --> 00:13:44.976
如果斜率是1 那么像素会保持不变 

178
00:13:44.976 --> 00:13:49.625
如果斜率小于1 相当于像素值被压缩 

179
00:13:49.625 --> 00:13:53.880
如果斜率大于1 就会被拉伸 

180
00:13:53.880 --> 00:13:57.505
如果我们有一个大于1的斜率 

181
00:13:57.505 --> 00:14:01.445
0还是0 但是1会被拉伸 增加到斜率值 

182
00:14:01.445 --> 00:14:05.307
我们来看看这个效果 

183
00:14:05.307 --> 00:14:10.901
这是原图像 因为中间区域的像素值被延展了 

184
00:14:10.901 --> 00:14:14.479
大家就能突然看清之前无法辨识的细节了 

185
00:14:14.479 --> 00:14:18.838
仔细观察这里非常难注意到的点 

186
00:14:18.838 --> 00:14:24.994
在这里却能够看到这张图像在这里是有斑点的 

187
00:14:24.994 --> 00:14:28.546
大家如果想的话 可以对图像做阈值处理 

188
00:14:28.546 --> 00:14:34.701
就像这里做的一样 然后大家就可以分辨不同的区域 

189
00:14:34.701 --> 00:14:38.489
但是注意从这里到这里的变化 

190
00:14:38.489 --> 00:14:43.231
这里非常难看清图像内容 

191
00:14:43.231 --> 00:14:49.605
这个图像比之前好看许多 不仅如此 

192
00:14:49.605 --> 00:14:56.227
我们还可以看到很多图像中的细节 这在图像分析中非常重要 

193
00:14:56.227 --> 00:15:02.270
我们可以做像阈值处理这样简单的操作 

194
00:15:02.270 --> 00:15:07.403
这里用到的都是极其简单的运算 顺便提一下 这里用到这个变换运算 

195
00:15:07.403 --> 00:15:10.880
从这里到这里同样用到了一个非常简单的运算 

196
00:15:10.880 --> 00:15:14.505
实际上我们之前看到过这个运算 

197
00:15:14.505 --> 00:15:17.694
这里用到的是这个运算 

198
00:15:17.694 --> 00:15:23.085
所以这里是s 这里是r 

199
00:15:23.085 --> 00:15:29.222
如果像素值低于某一个特定值 那么它们就会变成0 

200
00:15:29.222 --> 00:15:33.285
而有些高于这个值 那么它们就会变成图像中可以显示的最大值 

201
00:15:33.285 --> 00:15:39.008
所以非常简单的运算却可以在图像中 

202
00:15:39.008 --> 00:15:43.360
做非常明显并且非常有用的变换 

203
00:15:43.360 --> 00:15:50.679
这里有一些其它的例子 这个有些像阀值处理 

204
00:15:50.679 --> 00:15:54.964
但只是突出了中间区域 

205
00:15:54.964 --> 00:15:58.471
如果像素值在0到A之间 就让它变成一个很低的值 

206
00:15:58.471 --> 00:16:04.549
如果像素值大于B 也变成一个非常低的值 

207
00:16:04.549 --> 00:16:08.501
而在中间的值变得非常高 这里是另外一个例子 

208
00:16:08.501 --> 00:16:12.590
如果像素值在0和A之间 那么就保持不变 

209
00:16:12.590 --> 00:16:17.652
像素值大于B 也保持不变 

210
00:16:17.652 --> 00:16:21.688
而令像素值在A和B之间的变得非常亮 或者也可以非常非常暗 

211
00:16:21.688 --> 00:16:27.704
假设 我们感兴趣的区域 

212
00:16:27.704 --> 00:16:33.794
像素值在A和B之间 并且我们想要强调这个区域 

213
00:16:33.794 --> 00:16:37.903
大家就可以做这种运算 或者这种运算 

214
00:16:37.903 --> 00:16:41.792
我们在下一张幻灯片中看一下它们的效果 

215
00:16:41.792 --> 00:16:48.089
这是原图像 这是第一种运算 

216
00:16:48.089 --> 00:16:54.228
我们来选取图像的一个区域 使其非常亮 

217
00:16:54.228 --> 00:16:57.821
让其它所有区域都非常暗 

218
00:16:57.821 --> 00:17:00.609
这是另外一个例子 

219
00:17:00.609 --> 00:17:05.199
这是第二个例子 我们选取图像中一个区域 

220
00:17:05.199 --> 00:17:08.405
并且只改变图像中的这个区域 

221
00:17:08.405 --> 00:17:13.650
其它所有区域都保持不变 

222
00:17:13.650 --> 00:17:18.167
当然 我们需要知道要被关注的区域在哪 像我之前说的 这就是需要从经验中得来的 

223
00:17:18.167 --> 00:17:21.664
或是从我们捕捉的景物信息中得到 

224
00:17:21.664 --> 00:17:23.850
在这个例子中 

225
00:17:23.850 --> 00:17:29.640
就是指有关生物学的信息 

226
00:17:29.640 --> 00:17:34.894
还有这个区域在图像中是用哪些像素值表示的 

227
00:17:34.894 --> 00:17:40.296
这便是我们要变亮或者变暗的区域 

228
00:17:40.296 --> 00:17:44.218
这里也是一样的 这里我是想要给大家展示 

229
00:17:44.218 --> 00:17:49.103
我们如何利用极其简单的运算达到目的 

230
00:17:49.103 --> 00:17:54.579
来改善图像的视觉效果 

231
00:17:54.579 --> 00:18:00.351
将非常暗或者非常亮的区域 变为像素值分布非常均匀 并且清晰的图像 

232
00:18:00.351 --> 00:18:03.618
这些运算还能帮助我们突出感兴趣的区域 

233
00:18:03.618 --> 00:18:09.240
如果大家想要在图像中这个区域做分析 

234
00:18:09.240 --> 00:18:14.502
那么可以将其它区域都变得非常暗 这样注意力就会被集中到这里 

235
00:18:14.502 --> 00:18:18.683
但或许大家会觉得 这样会丢失图像中的细节 

236
00:18:18.683 --> 00:18:20.845
因为这个区域都变成白色了 

237
00:18:20.845 --> 00:18:24.810
我们也可以做些其它的变换 

238
00:18:24.810 --> 00:18:29.824
我们可以将整个背景变成0 但不改变这个区域的值 

239
00:18:29.824 --> 00:18:32.984
这里显示的就是这种运算 

240
00:18:32.984 --> 00:18:36.487
我们将所有不感兴趣的区域 变得非常暗或者非常亮 

241
00:18:36.487 --> 00:18:40.745
但是所有我们感兴趣的地方都保持不动 

242
00:18:40.745 --> 00:18:43.150
这样我们就能 

243
00:18:43.150 --> 00:18:48.530
只将目光集中在那个区域 

244
00:18:48.530 --> 00:18:53.195
所以这都是一些非常简单的运算 下一个视频我们会开始 

245
00:18:53.195 --> 00:18:58.185
讲解直方图均衡化 但在这之前 

246
00:18:58.185 --> 00:19:03.433
我们会做一个简短的视频 来实时运行这里的一些运算 

247
00:19:03.433 --> 00:19:08.099
这样我们就可以看到它们是多么简单 同时观察它们在图像上的效果 

248
00:19:08.099 --> 00:19:10.432
下个视频再见 

249
00:19:10.432 --> 00:19:11.080
谢谢大家