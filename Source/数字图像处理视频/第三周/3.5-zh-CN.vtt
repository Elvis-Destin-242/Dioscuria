WEBVTT

1
00:00:00.000 --> 00:00:04.890
当谈到直方图修正 无论是直方图均衡化 

2
00:00:04.890 --> 00:00:10.115
还是直方图匹配 我们只依据像素的灰度值本身进行替换 

3
00:00:10.115 --> 00:00:13.666
而不会考虑该像素周围的图像区域 

4
00:00:13.666 --> 00:00:17.150
接下来我们要做的 

5
00:00:17.150 --> 00:00:21.504
是空间操作 我们将 

6
00:00:21.504 --> 00:00:26.730
依据给定像素周围的情况 替换其像素值 

7
00:00:26.730 --> 00:00:30.080
所以 邻域就会产生影响 

8
00:00:30.080 --> 00:00:34.985
假如我们有一幅完整的图像 考虑这个像素 

9
00:00:34.985 --> 00:00:38.459
这里是这一部分的放大图 或者观察这里 

10
00:00:38.459 --> 00:00:44.046
我们会根据这个像素的周围像素 决定如何替换它的像素值 

11
00:00:44.046 --> 00:00:47.793
那就不再是我行我素了 

12
00:00:47.793 --> 00:00:52.834
不再是只根据像素值本身来决定如何变化 

13
00:00:52.834 --> 00:00:58.012
像素的改变将依赖于邻域像素 

14
00:00:58.012 --> 00:01:02.100
最简单的处理方式就是取平均值 

15
00:01:02.100 --> 00:01:07.602
所以我们可以将这个像素值 比如说 替换为 

16
00:01:07.602 --> 00:01:12.118
它附近 3x3 区域内像素值的平均值 当然 我们需要归一化 

17
00:01:12.118 --> 00:01:16.175
如果是对 9 个像素取平均 我们就要除以9 

18
00:01:16.175 --> 00:01:21.491
我们还可以做加权平均 比如在某种情况下 

19
00:01:21.491 --> 00:01:23.560
像素本身的权重是4 

20
00:01:23.560 --> 00:01:29.486
而 4邻域中的像素 我们讨论过 4邻域 和 8邻域结构 

21
00:01:29.486 --> 00:01:36.029
4邻域中的像素 按权重为2 来计算 

22
00:01:36.029 --> 00:01:42.316
对角线上的像素 其权重为1 这样我们就分配好了16个权 

23
00:01:42.316 --> 00:01:47.974
1+2是3 再+1是4 再+2是6 以此类推 

24
00:01:47.974 --> 00:01:54.026
所以我们需要除以16进行归一化 这个是直接平均 

25
00:01:54.026 --> 00:01:58.348
而这个是加权平均 让我们看看真实图像中情况是怎样的 

26
00:01:58.348 --> 00:02:02.633
这有一张图片 

27
00:02:02.633 --> 00:02:08.129
这是一个很好的示例图像 因为它上面有一系列不同大小的结构体 

28
00:02:08.129 --> 00:02:15.156
然后我们看一下其余这些经过局部平均处理的图像 

29
00:02:15.156 --> 00:02:19.931
每一个图像中我们选取不同大小的邻域 

30
00:02:19.931 --> 00:02:26.327
大小从 3x3 到 35x35 这是3、5、9、15 和35 

31
00:02:26.327 --> 00:02:31.027
我们选取的区域从 3x3 到 35x35 邻域越大 

32
00:02:31.027 --> 00:02:34.890
平均处理的像素就越多 我们可以看到最终的效果 

33
00:02:34.890 --> 00:02:40.013
当平均的区域大小是 3x3 时 我们看不出什么变化 

34
00:02:40.013 --> 00:02:44.930
虽然这些轮廓清晰的区域有一点变化 但先让我们来看看35 

35
00:02:44.930 --> 00:02:50.677
经过 35x35 大小的窗口 也就是 35x35 邻域处理后 我们看到很多东西变得模糊了 

36
00:02:50.677 --> 00:02:56.147
我很快会解释这是为什么 直观上让你理解背后的原理 

37
00:02:56.147 --> 00:02:59.193
可以看到 很多的结构都变得模糊了 

38
00:02:59.193 --> 00:03:04.110
如果我们只用 15x15 的邻域处理 只会有较少的结构变得模糊 

39
00:03:04.110 --> 00:03:09.885
比如 我们可以看到 这儿的竖条要比那儿的更容易辨认 

40
00:03:09.885 --> 00:03:14.106
那取决于物体间的距离 

41
00:03:14.106 --> 00:03:16.994
为什么会变得模糊呢？ 

42
00:03:16.994 --> 00:03:23.206
因为 拿这一点当例子 想象它周围有一扇 35x35 的窗口 

43
00:03:23.206 --> 00:03:27.754
我们将该黑色像素点的周围的灰色区域取平均 

44
00:03:27.754 --> 00:03:32.352
使得这一点变得更亮 

45
00:03:32.352 --> 00:03:37.128
这儿非常暗 是黑色 这比较亮   

46
00:03:37.128 --> 00:03:41.614
如果我们平均它周围的像素值 那么这个像素值会增大 

47
00:03:41.614 --> 00:03:47.404
当我们在这做平均处理时 因为这周围的像素是黑色的 

48
00:03:47.404 --> 00:03:52.252
那么平均来说这里就会变暗 

49
00:03:52.252 --> 00:03:55.653
接着我来解释模糊现象 

50
00:03:55.653 --> 00:04:00.140
让我用一个一维函数来说明 

51
00:04:00.140 --> 00:04:06.847
如果我取这一点 这点 和这点进行平均 很明显 

52
00:04:06.847 --> 00:04:11.052
这一点的像素值会变小 因为这一点的影响 

53
00:04:11.052 --> 00:04:15.432
因此这一点的灰度值 会被这附近的灰度值代替 

54
00:04:15.432 --> 00:04:19.812
如果我将这一点 和这一点 还有这里的像素点取平均 

55
00:04:19.812 --> 00:04:24.320
那么它的值会变大一些 

56
00:04:24.320 --> 00:04:31.182
于是这个极端陡峭的曲线 会变得比较平滑 

57
00:04:31.182 --> 00:04:36.224
这正是因为我们做了平均 我们将在 

58
00:04:36.224 --> 00:04:41.482
课程的第二部分了解到 怎样在平均处理时避免模糊现象 

59
00:04:41.482 --> 00:04:45.372
但这只用来描述邻域平均中 

60
00:04:45.372 --> 00:04:48.397
一种非常简单的操作 

61
00:04:48.397 --> 00:04:54.303
以及邻域的大小是怎样影响像素的 

62
00:04:54.303 --> 00:04:57.963
现在 你可能会问 这个操作重要么？ 

63
00:04:57.963 --> 00:04:59.360
答案是相当重要 

64
00:04:59.360 --> 00:05:03.480
虽然会有模糊现象 但我们基本上 

65
00:05:03.480 --> 00:05:08.996
不会用 35x35 的窗口做平均处理 对特定的问题   

66
00:05:08.996 --> 00:05:14.930
我们需要设计出合适大小的窗口 比如 在这张图上 

67
00:05:14.930 --> 00:05:19.837
我们想要去除那些非常小的物体 

68
00:05:19.837 --> 00:05:25.768
可能那些是噪点 或是一些星球 亦或是一些小颗粒 

69
00:05:25.768 --> 00:05:31.082
总之我们不在意 接着我们就可以对这个图像做局部滤波处理 

70
00:05:31.082 --> 00:05:35.088
在这个例子中 我们使用了 15x15 大小的窗口 

71
00:05:35.088 --> 00:05:38.245
虽然这张图片变得模糊了 

72
00:05:38.245 --> 00:05:41.711
但是我们去除了这些小颗粒 

73
00:05:41.711 --> 00:05:47.180
这儿的一个小颗粒会被周围的深色像素平均化 

74
00:05:47.180 --> 00:05:51.570
接着 它的灰度值就会变得非常小 

75
00:05:51.570 --> 00:05:57.346
非常接近于0 当我对其阈值处理后 

76
00:05:57.346 --> 00:06:01.951
我基本上得到了我想要的区域 也就是更大 更明亮的区域 

77
00:06:01.951 --> 00:06:07.883
首先我们模糊化 然后做阈值处理 这样我们可以去除噪点 

78
00:06:07.883 --> 00:06:13.269
得到图像中对我们最重要的物体 

79
00:06:13.269 --> 00:06:18.284
这个简单操作对这样的任务非常有效 

80
00:06:18.284 --> 00:06:22.489
更有趣的是 这个非常简单的平均处理   

81
00:06:22.489 --> 00:06:26.629
有着很有趣的数学特性 我会在接下来解释这一点 

82
00:06:26.629 --> 00:06:31.739
这些性质非常重要 因为它们能帮助我们开发其它类型的平均处理 

83
00:06:31.739 --> 00:06:35.361
比如 不会模糊边缘的平均处理 

84
00:06:35.361 --> 00:06:39.954
我们将在下一次视频中解释这些数学性质 

85
00:06:39.954 --> 00:06:45.064
以及简单的平均操作与其它结构的关系 

86
00:06:45.064 --> 00:06:46.099
谢谢大家
// 果壳教育无边界字幕组 | 玉米Yummy | 某音某莹 | 小白_远游