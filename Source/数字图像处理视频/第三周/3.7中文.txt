正如刚才看到的 局部平均有着某种非常有趣的数学特性 同时这个操作很简单 从之前的例子可以看到这很有用 但是我们同时也看到 这会导致 图像中的内容变模糊 边缘变模糊 所以 我们该怎么解决这个问题呢？ 我们有几种思路 一种是用不同的局部运算来代替局部平均 这个我们稍后可以看到 而另外一种是这样的 我们可以先问问自己 我们只局限于对局部邻域求平均吗？ 或许我们可以选择一个更好的求平均的方法 记住平均就像热量的流动 那么我们应该是在最大和最小的像素值之间取平均 还是只对相似的像素点求平均 并且不对相差很大的像素点求平均 这是一个非常有趣的想法 我们可以用多种方法 用不同方式来实现它 现在我们来介绍一个特别简洁的方法 从某种程度上说它简洁是因为它很简单 它就是非局部均值算法 与在局部邻域求平均不同 我们将在整个图像中求平均 一起来看看为什么能这样做 以及如何才能做到这点 这个思路非常简单 一起来观察下这幅图像 我们能看到图像里有重复的东西 有时候这些被称为图像的自相似性 例如 如果我们着眼于这个局部邻域 它与这一个局部邻域非常相似 也跟这个局部邻域非常相似 我们同样可以观察到这里的这个局部邻域 与这个局部邻域非常相似 甚至与这个也相似 虽然它们隔得很远 但是它们很相似 这里也是同样的道理 因此 我们之前只平均这里的像素 也许我们应该平均相似的局部邻域 或者我们可以对这三个进行平均 这样我们可以用 这几个相似的像素计算并代替这个像素 但是不能把这个与这些混在一起 因为它们的局部邻域非常不一样 所以 非局部均值或者是非局部平均的 基本思路是尝试去平均某些局部邻域 并利用它们的特性 而不是限定在一个局部邻域里 那么我们为什么要这么做 以及 我们该怎么做呢？ 基本的思想是如果我们假设这些是相同的东西 有着相同的结构 但是或许有不同的噪声 一起来看看这种假设的效果 现在假设有某个像素P 它是我们观察到的像素 它是无噪的像素和噪声相加的结果 而这个噪声是一个随机变量 因此结果总会有稍稍的不同 所以 我们可以多次观察这个像素 我们观察到了 P1 叠加了某一噪声 我们再次观察同一像素 但是叠加了不同的噪声 我们可以观察多次 比如说观察了 N 次 每次都是相同的像素和不同的噪声 如果我们把这些做个平均 我们可以看到一些信号分析中的特性 噪声按照我们平均的数量成平方下降 也就是说 我们总是在平均相同的像素 而噪声是个随机变量 于是噪声以N的平方成比例下降 我们对越多像素值求平均 噪声减少得越多 当然 很重要的一点是我们总是平均相同的像素 噪声是唯一改变的地方 所以这是非局部均值产生的一个原因 或许我可以找到一些相同的或者很相似的结构 它们的噪声都是不一样的 但我可基于这些 利用均值来降低噪声 那么 基本思路就是 首先找相似的邻域 然后求平均值 如果我想替换中心的像素 可以根据这个邻域来寻找近似的邻域 然后用近似邻域的中心像素的均值来替换它 那怎样寻找近似邻域呢？ 有专门讨论非局部均值的文献 其中包括两部分 第一部分是怎样找到相似邻域 找出它们之后 第二部分就是如何求得均值 这时可以采用加权平均处理它们 或者也可以推演出它们之间不同的关系 但总体最简单的做法是通过比较来寻找邻域 比如 比较对象之间的均方误差 要确保它非常小 这是非常简单的操作 你可以用 3x3 或 5x5 或 7x7 的邻域来扫描整个图像
在 5 分 41 秒处开始记录5:41
这样做就可以了 扫描整个图像 看看哪些与这个相似 你会找到一组邻域 你可以用所有这些邻域 你也可以只用最相似的一些邻域 你一旦找到它们 就可以利用每个邻域的中心像素 用它们的均值来替换那个像素 如果你想消除这个像素上的噪声 你可以寻找拥有这样像素的邻域 通过扫描整个图像 你会找到一些邻域 用这些近似邻域的中心像素的均值来替换这个像素 再一次说明 这个只是一个例子 你可以用不同的方法寻找相似的邻域 实际上 一旦你找到它们 除了计算均值 还可以计算加权平均值 或者用其它的函数关系进行计算 这些操作都是基于同样的概念的 这与仅仅在邻域内计算均值并以此代替像素不同 我们用一种方法去衡量相似性 在整个图像中寻找相似的邻域 而一旦找到这些邻域 就可以结合它们 用刚才所讲的概念对这个像素降噪 这样的处理都很相似 比如在 MATLAB 里 一到两行的命令 就可以完成这个处理过程 这样的处理非常有用 而且在最近几年里 图像处理领域中展开了很多这方面的研究 很前沿的研究 接下来我准备用一些图片来做例子 进行演示 我会实时处理这些图像 那么 下一个视频再见 // 果壳教育无边界字幕组 | Cynthy | luoyetx | 小白_远游