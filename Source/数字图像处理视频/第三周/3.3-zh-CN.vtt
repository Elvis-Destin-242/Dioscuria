WEBVTT

1
00:00:00.000 --> 00:00:03.618
大家好 欢迎回到我们的图像与视频处理课程上来 

2
00:00:03.618 --> 00:00:07.352
在前一个视频里 我们演示了一个实时的直方图均衡化例子 

3
00:00:07.352 --> 00:00:12.119
我们见识了它是如何提高图像质量 并成功地将一个非均衡直方图 

4
00:00:12.119 --> 00:00:16.140
转换成均衡直方图的 现在让我们深入地探索这是如何实现的 

5
00:00:16.140 --> 00:00:20.505
当我讲解过它背后的数学原理后 大家就会发现它其实如此简单 

6
00:00:20.505 --> 00:00:23.090
如果大家愿意的话 

7
00:00:23.090 --> 00:00:26.249
应该马上就可以在自己的电脑上将其编写出来 

8
00:00:26.249 --> 00:00:30.986
让我们深入这个问题 首先 我们再讲讲直方图 

9
00:00:30.986 --> 00:00:35.317
这里是一张很暗的图像 

10
00:00:35.317 --> 00:00:39.377
这里是它的直方图 我们可以看到 

11
00:00:39.377 --> 00:00:44.858
像素值多是分布在直方图低值端 

12
00:00:44.858 --> 00:00:50.001
比较亮的值并不多 在这个直方图上我们可以看到 

13
00:00:50.001 --> 00:00:55.265
这些区域的像素数量非常非常少 这里我们看到的是相反的情况 

14
00:00:55.265 --> 00:00:59.990
这是一张非常亮的图像 在这个直方图上 大量像素集中在高值端 

15
00:00:59.990 --> 00:01:03.140
所以这里较低的像素值并不多 

16
00:01:03.140 --> 00:01:08.672
这里 是一张灰蒙蒙的对比度很低的图像 我们可以看到它的像素 

17
00:01:08.672 --> 00:01:13.605
实际上集中在中间 这是一张看起来 

18
00:01:13.605 --> 00:01:17.071
好很多的图像 它们都是同一张图像 这一张看起来 

19
00:01:17.071 --> 00:01:20.404
清楚很多 其对应的分布是比较均匀的 

20
00:01:20.404 --> 00:01:25.736
用到了全部范围的像素值 几乎是均匀的 

21
00:01:25.736 --> 00:01:30.540
这样这张图像看起来就清楚了许多 所以我们想要学习 

22
00:01:30.540 --> 00:01:34.317
如何将一个这样的分布转换成这样的分布 

23
00:01:34.317 --> 00:01:39.202
如前所述 这是一个非常非常简单的操作 

24
00:01:39.202 --> 00:01:43.573
我们等一下就能弄懂它 我们的目标是从一个给定的分布 

25
00:01:43.573 --> 00:01:50.552
转换到一个均匀的分布 假设像素的值是从 

26
00:01:50.552 --> 00:01:55.900
0到L-1 例如标准的 L是256 那么像素值 

27
00:01:55.900 --> 00:02:00.070
是从0 也就是黑色 到255 也就是非常亮或者白色 

28
00:02:00.070 --> 00:02:03.366
我们希望得到一个均匀的分布 

29
00:02:03.366 --> 00:02:08.639
所以它的概率 如果我们没有对数量归一化 

30
00:02:08.639 --> 00:02:12.430
但是方便起见 我们仅仅考虑归一化的情形 

31
00:02:12.430 --> 00:02:18.033
这个概率是 1/(L-1) 这就是一个像素达到这个灰度值的概率 

32
00:02:18.033 --> 00:02:24.372
我们希望从这里到这里 

33
00:02:24.372 --> 00:02:30.399
这就是我们的目标 为了达成这个目标 我们需要 

34
00:02:30.399 --> 00:02:36.475
找到一个以原图的像素值作为输入的变换 

35
00:02:36.475 --> 00:02:40.858
使它们转换成另一个图像的像素值 

36
00:02:40.858 --> 00:02:49.874
所以有了一张图像之后 对于图像中的每一个像素 

37
00:02:49.874 --> 00:02:55.342
我要得到像素的值 之后变换成一个新的值 

38
00:02:55.342 --> 00:02:59.548
放在同样的地方 提醒大家一下 目前为止 

39
00:02:59.548 --> 00:03:03.684
我们只根据这一点的像素值来作出决定 跟它周围的像素点无关 

40
00:03:03.684 --> 00:03:07.610
只根据它自己的值 如果这个值是7 我们需要确定 

41
00:03:07.610 --> 00:03:13.200
7要转换成什么值 而不受周围像素值影响 

42
00:03:13.200 --> 00:03:19.096
所以 我们需要一个变换 将任何像素值变换到一个新的像素值 

43
00:03:19.096 --> 00:03:22.470
从而得到一个均匀分布 

44
00:03:22.470 --> 00:03:27.590
对于这样的一个变换有一个要求 我们将要做出 

45
00:03:27.590 --> 00:03:32.455
一个递增的变换 这样做的原因是我们不想反转像素值 

46
00:03:32.455 --> 00:03:35.080
我们希望它是一个 

47
00:03:35.080 --> 00:03:38.985
单调递增的变换 如果7对应的是10 8对应的就应该至少是10   

48
00:03:38.985 --> 00:03:44.234
也可能大于10 但是我们不希望它小于10 

49
00:03:44.234 --> 00:03:49.611
否则我们就反转了图像的内容 

50
00:03:49.611 --> 00:03:53.580
这样并非是直方图均衡化的目的 所以我们需要 

51
00:03:53.580 --> 00:03:57.087
一个递增的函数 我们的目标就是要找到这样的函数 

52
00:03:57.087 --> 00:04:02.629
有时我们可以得到严格单调递增的函数 每一个(不同的)像素值 

53
00:04:02.629 --> 00:04:07.610
都对应一个不同的像素值 有时我们会得到单调递增函数 

54
00:04:07.610 --> 00:04:12.935
其中一些像素值有可能对应相同的像素值 

55
00:04:12.935 --> 00:04:17.490
大家会发现 我们主要用这种直方图均衡方法 

56
00:04:17.490 --> 00:04:22.558
尤其是当我们处理这样的离散图像和离散的像素值时 

57
00:04:22.558 --> 00:04:26.728
我们会采用这种形式的变换 而不是这种形式的变换 

58
00:04:26.728 --> 00:04:31.797
这是计算机做离散型数据的直方图均衡化过程中存在的一个问题 

59
00:04:31.797 --> 00:04:37.378
有时候我们无法避免这种情况 

60
00:04:37.378 --> 00:04:42.001
我们接下来就会看到 那么我们如何来达成这个目标呢？ 

61
00:04:42.001 --> 00:04:47.878
基本思想其实很简单 我们可以把直方图看作 

62
00:04:47.878 --> 00:04:53.689
一个分布s 所以这里我们需要一点点 

63
00:04:53.689 --> 00:04:58.038
概率论的基础 但是如果你没有这方面的基础 

64
00:04:58.038 --> 00:05:02.694
也别担心 这部分内容基本上是很浅显易懂的 

65
00:05:02.694 --> 00:05:05.328
我接下来要讲解的是 那么我们有一个分布 

66
00:05:05.328 --> 00:05:08.391
直方图就是一个分布 

67
00:05:08.391 --> 00:05:11.210
那么给定像素值的概率是多少？ 

68
00:05:11.210 --> 00:05:17.370
我们现在想要得到一个新的分布 我们其实已经有了当前的分布 

69
00:05:17.370 --> 00:05:21.758
所以我们有了一个新的不同的分布 

70
00:05:21.758 --> 00:05:27.036
提醒大家一下 我们要找的是一个从 r到s 的映射 

71
00:05:27.036 --> 00:05:33.343
我们要找的是这个变换 其实概率中有一个基本的结论 

72
00:05:33.343 --> 00:05:40.081
如果这个映射存在 那么这两个分布之间的 

73
00:05:40.081 --> 00:05:47.784
关系就是这样 这就是它们之间的关系 

74
00:05:47.784 --> 00:05:53.100
所以这个新的概率分布就是原概率分布乘以 

75
00:05:53.100 --> 00:05:57.940
这个导数的绝对值 这是一个概率分布中的著名结论 

76
00:05:57.940 --> 00:06:03.188
大家只要知道这个就可以理解之后的推导了 

77
00:06:03.188 --> 00:06:06.733
所以我们先假设一下  我将要证明 

78
00:06:06.733 --> 00:06:11.163
这个变换就是我们要找的 

79
00:06:11.163 --> 00:06:14.640
我们先假设这个就是我们要的变换 

80
00:06:14.640 --> 00:06:19.668
那么 s是一个变换 对于任意的一个像素值 

81
00:06:19.668 --> 00:06:25.445
我们会得到一个新的像素值 让我们把它写作 L-1 乘以 

82
00:06:25.445 --> 00:06:30.793
现在的直方图 或者说现在的概率分布 从0到r的积分 

83
00:06:30.793 --> 00:06:37.367
也就是 P(w)dw 

84
00:06:37.367 --> 00:06:41.637
我等一下就会解释我现在写的是什么意思 

85
00:06:41.637 --> 00:06:46.903
那么我在这里做了什么呢？ 我对这一块 

86
00:06:46.903 --> 00:06:52.252
也就是达到特定灰度值的像素数量 从0到r积分 

87
00:06:52.252 --> 00:06:58.186
接下来我要做这一步 因为我在使用概率函数 

88
00:06:58.186 --> 00:07:03.619
所以我把它们归一化在0到1之间 之后再变回灰度值 

89
00:07:03.619 --> 00:07:10.054
让我们再看一次这个变换 我们先数一下 如果我们是在一个离散空间中 

90
00:07:10.054 --> 00:07:16.283
我们就会数一下 如果我们想要知道 当 r=7时 

91
00:07:16.283 --> 00:07:21.487
应该变换到哪一个像素值 我们就要数 有多少像素值为0 

92
00:07:21.487 --> 00:07:27.929
有多少像素值为1 有多少为2 有多少为3 这样一直到7 就会得到 

93
00:07:27.929 --> 00:07:32.059
这个变换 我现在来向大家证明这就是 

94
00:07:32.059 --> 00:07:34.867
要做直方图均衡化的正确变换 

95
00:07:34.867 --> 00:07:39.492
让我们来做这个 为了证明它 我们要计算 

96
00:07:39.492 --> 00:07:43.622
这个导数 它的基本思想很简单 

97
00:07:43.622 --> 00:07:51.341
我们实际上要算的是ds/dr 现在这里我们有了一个明确的变换 

98
00:07:51.341 --> 00:08:00.605
那我们就可以计算这个导数 这其实就是dT(r)/dr   

99
00:08:00.605 --> 00:08:07.709
我们还有这个式子 所以就可以写成 

100
00:08:07.709 --> 00:08:18.363
这个式子对 r 求导数 也就是 (L-1) 乘以 从0到r 

101
00:08:18.363 --> 00:08:25.257
对 Pr(w)dw 求积分 非常抱歉 这几行 

102
00:08:25.257 --> 00:08:31.352
这几行都写到一起了 不过我觉得这还是非常清楚的 

103
00:08:31.352 --> 00:08:38.448
现在我们需要计算这个导数 如果你还记得一些微积分的基础知识 

104
00:08:38.448 --> 00:08:41.814
这是一个常数 所以将它提出来 

105
00:08:41.814 --> 00:08:48.273
然后 这个积分的导数就是积分里面的部分 

106
00:08:48.273 --> 00:08:58.599
所以它等于 L-1 乘以 我要把剩下的 

107
00:08:58.599 --> 00:08:59.760
写在下一行 Pr(r) 

108
00:09:02.760 --> 00:09:09.488
现在我们得到了 s对r 的导数 即 L-1 乘以概率函数 

109
00:09:09.488 --> 00:09:13.370
也就是原来的直方图 

110
00:09:13.370 --> 00:09:17.834
接下来我们要做的是 我等一下会把这个擦掉 

111
00:09:17.834 --> 00:09:23.090
我们需要把这里的这些代回去 然后看看会怎样 

112
00:09:23.090 --> 00:09:29.102
那么我们就把这部分代入 然后看看能得到什么 这里是 dr/ds 

113
00:09:29.102 --> 00:09:29.858
但是这里是 ds/dr 

114
00:09:29.858 --> 00:09:33.890
所以我们需要取它的倒数 这应该是 1除以这个 

115
00:09:33.890 --> 00:09:39.434
我希望大家已经能看出来这里会得到什么 那么我们来看看事实上 

116
00:09:39.434 --> 00:09:45.860
能得到什么 现在我们有 P 

117
00:09:45.860 --> 00:09:51.720
我们要找的新的概率函数是这个原来的概率函数 

118
00:09:51.720 --> 00:10:00.543
乘以 dr/ds的绝对值 我们之前已经算出了 dr/ds 

119
00:10:00.543 --> 00:10:11.292
那这里是Pr(r) 1/(L-1) 的绝对值 这是我们用来做 

120
00:10:11.292 --> 00:10:17.802
归一化的 Pr(r) 概率都是正值 这个也是正的 

121
00:10:17.802 --> 00:10:22.809
因为 L大于1 所以肯定是正的 

122
00:10:22.809 --> 00:10:29.292
所以我可以将绝对值符号去掉 然后我们就可以看到 

123
00:10:29.292 --> 00:10:35.530
它可以和这个约分 这样就能得到1/(L-1) 也正是我们想要得到的结果 

124
00:10:35.530 --> 00:10:41.348
我们想要新的图像有一个均匀的常数概率分布 

125
00:10:41.348 --> 00:10:46.840
我将实际的变换 

126
00:10:46.840 --> 00:10:50.610
再写一次 实际的变换 s 

127
00:10:50.610 --> 00:10:59.920
是一个 r的映射 就是 L-1 (乘以) 从0到r的积分 

128
00:10:59.920 --> 00:11:04.688
对 原来概率分布函数或者直方图 求积分 

129
00:11:04.688 --> 00:11:10.904
这是一个很简单的函数 我们一直不断地数有多少个像素 

130
00:11:10.904 --> 00:11:14.480
是某个特定的值 直到数到r 这就是我们的变换 

131
00:11:14.480 --> 00:11:20.100
非常非常简单的操作 在几乎所有的编程语言中 

132
00:11:20.100 --> 00:11:25.208
这基本上就是一行代码 这代码就能为我们做 

133
00:11:25.208 --> 00:11:28.700
直方图均衡 接下来让我们看一个实例 

134
00:11:29.740 --> 00:11:36.632
首先 我们有这样一组人工样本 其中有 

135
00:11:36.632 --> 00:11:42.422
8个不同的值 这部分是数量 我们有790个像素的值是0   

136
00:11:42.422 --> 00:11:47.324
1023个像素的值是 1 

137
00:11:47.324 --> 00:11:53.113
其余类似 我们把这个变换成一个概率值 

138
00:11:53.113 --> 00:11:58.902
因为我们之前一直在用概率 这就是我们会得到的概率 

139
00:11:58.902 --> 00:12:04.835
我们把这些代入到我刚刚展示过的那个式子里 

140
00:12:04.835 --> 00:12:06.500
就会得到这个 首先 

141
00:12:06.500 --> 00:12:11.642
这是原来的直方图 Pr 这是现在我们有的分布 

142
00:12:11.642 --> 00:12:16.856
如果我们把这个代入到刚刚的那个式子里 就会得到 

143
00:12:16.856 --> 00:12:19.855
这个变换 注意 它是一个单调函数 

144
00:12:19.855 --> 00:12:22.998
因为我们是在积分 所以肯定是单调的 

145
00:12:22.998 --> 00:12:28.354
我把它再写一遍 基本操作是 从0到r积分 

146
00:12:28.354 --> 00:12:31.854
积分得越多 由于这里这些都是正数 

147
00:12:31.854 --> 00:12:36.330
所以很明显这是一个递增函数 

148
00:12:36.330 --> 00:12:41.030
这只是加上了越来越多的正数 所以肯定是正的 

149
00:12:41.030 --> 00:12:46.166
所以这是一个增函数 它说明的是 0 对应这个数 

150
00:12:46.166 --> 00:12:49.353
1对应这个数 其它同理 

151
00:12:49.353 --> 00:12:53.839
所以这是一个很简单的映射 这样就得到了一个新的直方图 

152
00:12:53.839 --> 00:12:56.734
大家可能会有疑问 它看起来是更均匀了 

153
00:12:56.734 --> 00:13:01.562
但是出现了这样一个情况 由于我们在处理离散的数据 

154
00:13:01.562 --> 00:13:06.731
我们是在处理计算机中的图像 我们必须要 

155
00:13:06.731 --> 00:13:10.063
对数字取整 所以例如 4.2 将会变成 4 

156
00:13:10.063 --> 00:13:13.010
所以我们最终得到的峰值会比这里的少 

157
00:13:13.010 --> 00:13:18.538
因为这里的这些数最终会合并为一个相同的整数 

158
00:13:18.538 --> 00:13:22.342
为了处理离散图像 我们必须 

159
00:13:22.342 --> 00:13:28.946
付出这样的代价 我们不能表示 6.7 或 6.8   

160
00:13:28.946 --> 00:13:34.546
它们都会变成 虽然公式上表明它们应该是不同的数字 

161
00:13:34.546 --> 00:13:39.858
它们都将变成 比如 7 以类似的方式 我要问大家一个问题 

162
00:13:39.858 --> 00:13:44.955
我希望大家能思考一下 

163
00:13:44.955 --> 00:13:49.637
再回答我 让我们来看看以下这个直方图 

164
00:13:49.637 --> 00:13:55.460
它只有两个不同的像素值 

165
00:13:55.460 --> 00:14:00.428
这两个 它们的具体数字并不重要 

166
00:14:00.428 --> 00:14:05.393
但是这就是像素值的原始分布 

167
00:14:05.393 --> 00:14:11.111
这张图像中只有两种值 它是一张只有两种不同颜色 

168
00:14:11.111 --> 00:14:14.421
两种不同像素值的二值图像 

169
00:14:14.421 --> 00:14:19.988
我要问的问题是 这个像素值和这个像素值 

170
00:14:19.988 --> 00:14:25.329
映射后的结果之间是什么关系 让我们把这个叫做 a   

171
00:14:25.329 --> 00:14:30.723
把这个叫做 b 我要问的是 T(a) 和 T(b) 之间的关系   

172
00:14:30.723 --> 00:14:33.575
它们相等吗？ 它们不相等吗？ 

173
00:14:33.575 --> 00:14:37.014
T(a) 比 T(b) 大吗？ T(a) 比 T(b) 小吗？ 

174
00:14:37.014 --> 00:14:43.305
仔细想一想然后回答这个问题 我们一会回来 

175
00:14:43.305 --> 00:14:48.590
讲解正确答案的解释 

176
00:14:48.590 --> 00:14:52.195
我们来看看哪一个是正确答案 

177
00:14:52.195 --> 00:14:58.340
大家回想一下 我们在直方图均衡中做的是积分 

178
00:14:58.340 --> 00:15:01.781
现在我的问题是 这两者的关系是 

179
00:15:01.781 --> 00:15:05.386
相等 小于 还是大于 

180
00:15:05.386 --> 00:15:11.532
首先我们知道 T(b)应该大于或者等于T(a) 

181
00:15:11.532 --> 00:15:17.513
因为这是一个单调递增函数 但是我们来进一步看一下 

182
00:15:17.513 --> 00:15:23.065
到底会有怎样的结果 这里实际上是 

183
00:15:23.065 --> 00:15:28.020
要对直到这里的值做积分 所以实际上它积分的只是这一部分 

184
00:15:28.020 --> 00:15:31.638
从这里要积分的是 到 b 之前的所有部分 

185
00:15:31.638 --> 00:15:35.255
但是 a和b 之间没有其它新的值   

186
00:15:35.255 --> 00:15:43.840
因为这之间没有新的值 所以就会得到 T(a)=T(b) 

187
00:15:43.840 --> 00:15:48.838
作为一个附加的练习 大家还可以想想 实际上 

188
00:15:48.838 --> 00:15:53.899
这个的变换是什么 这个的变换又是什么 

189
00:15:53.899 --> 00:15:56.430
这其实是和图像的平均值有关的 

190
00:15:56.430 --> 00:16:00.289
可以在课余做一下这个练习 

191
00:16:00.289 --> 00:16:05.097
但是这是一个很好的例子 来说明 我们在寻找的这个变换 

192
00:16:05.097 --> 00:16:10.159
即便是在我们需要的取整或者量化之前 因为我们是在 

193
00:16:10.159 --> 00:16:13.575
处理离散图像 即便在那之前 

194
00:16:13.575 --> 00:16:18.359
也不是严格单调的 也有可能存在多个数值最终会对应到 

195
00:16:18.359 --> 00:16:21.820
同一个变换后的值上 我们当然可以说 我们其实 

196
00:16:21.820 --> 00:16:27.660
并不太关心这一点 因为在原始图像中并没有 

197
00:16:27.660 --> 00:16:31.670
初始灰度值为 a 的像素 那是对的 但是我举这个例子 

198
00:16:31.670 --> 00:16:35.880
是想说明两点 一点是要说明变换并不一定要 

199
00:16:35.880 --> 00:16:39.088
是单调 严格单调递增的 

200
00:16:39.088 --> 00:16:42.764
它必须是单调递增的 但不一定是严格的 

201
00:16:42.764 --> 00:16:47.509
还有一点 要再次强调 直方图均衡所做的 

202
00:16:47.509 --> 00:16:52.990
就是数出不大于你想要映射的像素值的像素个数 

203
00:16:52.990 --> 00:16:55.997
所以我们要数出 不大于a 的像素的个数 

204
00:16:55.997 --> 00:16:59.540
和不大于 b 的像素个数 

205
00:16:59.540 --> 00:17:03.443
在这个练习之后 我们来看看几个其它的例子 

206
00:17:03.443 --> 00:17:08.038
我们已经在线上展示中看过一些例子了 但是我们还是再来 

207
00:17:08.038 --> 00:17:10.934
多看一个例子 我觉得这个例子很有用 

208
00:17:10.934 --> 00:17:13.767
我们回到最初开始的那些图像 

209
00:17:13.767 --> 00:17:17.355
这一张比较暗 这是经过直方图均衡化处理后的效果 

210
00:17:17.355 --> 00:17:20.314
这个直方图看起来比之前好了许多 

211
00:17:20.314 --> 00:17:23.210
让我们来看看它的映射 这就是它的映射 

212
00:17:23.210 --> 00:17:27.019
这里的像素值会被映射到这里 

213
00:17:27.019 --> 00:17:31.609
这边是r 这边是s 来看看这个映射 

214
00:17:31.609 --> 00:17:38.449
这个映射非常地 它的斜率非常非常大   

215
00:17:38.449 --> 00:17:43.039
因为它需要很快地把一些很暗的像素映射到更亮的像素上去 

216
00:17:43.039 --> 00:17:49.013
所以它有着非常非常陡的斜率 让我们来看看例如这一张图像 

217
00:17:49.013 --> 00:17:56.027
这一张本身就很清楚 它并没有改变很多 这是它对应的映射 

218
00:17:56.027 --> 00:18:00.697
它的斜率几乎就是1 对应着对角线 

219
00:18:00.697 --> 00:18:04.846
它的像素值基本上没有什么改变 

220
00:18:04.846 --> 00:18:08.693
其它两个映射可以用类似的方法理解 

221
00:18:08.693 --> 00:18:14.351
这一张图片实际上需要将像素变暗 我们可以看到 

222
00:18:14.351 --> 00:18:18.500
在其对应的映射上 看到发生了什么 

223
00:18:18.500 --> 00:18:21.706
这一张则需要拉伸像素 

224
00:18:21.706 --> 00:18:27.098
大家回想一下 它们实际上集中在中间 我们需要把它们拉伸开 

225
00:18:27.098 --> 00:18:31.543
我们可以在这里观察到这一点 它把这些像素 

226
00:18:31.543 --> 00:18:34.967
从中间拉伸开了 它们开始的时候集中在这里 

227
00:18:34.967 --> 00:18:41.015
然后我们将它们拉伸开 我们现在可以看到实际上它把这这个值域占满了 

228
00:18:41.015 --> 00:18:46.380
从这个原本直方图中占据的非常窄的范围 

229
00:18:46.380 --> 00:18:52.367
从由此产生的对比度很低的效果 现在实际上映射到了 

230
00:18:52.367 --> 00:18:56.989
从0到255的整个范围 我们在映射中也可以看到这一点 

231
00:18:56.989 --> 00:19:02.444
当然我们得到了一些非常相似的图像 

232
00:19:02.444 --> 00:19:08.285
不管它们原来是怎么样 事实上我们是从同一张原始图像中 

233
00:19:08.285 --> 00:19:12.011
得到这些图像的 这一张图像 仅仅改变了它的对比度 

234
00:19:12.011 --> 00:19:16.130
我们对它们均衡化之后 它们看起来就很接近了 

235
00:19:16.130 --> 00:19:21.360
这种技术常常被应用于 

236
00:19:21.360 --> 00:19:24.628
使不同条件下得到的图像 看起来更加相似 

237
00:19:24.628 --> 00:19:29.662
我们对直方图均衡化 同时 我们让这些图像 

238
00:19:29.662 --> 00:19:34.238
看起来更相似 之后我们就可以更方便地比较它们 

239
00:19:34.238 --> 00:19:37.142
那么 这就是直方图均衡 

240
00:19:37.142 --> 00:19:40.265
我们接下来在下一个视频里 

241
00:19:40.265 --> 00:19:44.428
要讲解的是直方图变换 如果我不希望对直方图均衡化 

242
00:19:44.428 --> 00:19:47.435
那要怎么办？ 我想要把一个直方图 

243
00:19:47.435 --> 00:19:50.384
转换成为我所知的可以改善图像的直方图 

244
00:19:50.384 --> 00:19:54.778
我们将会在下一个很短的视频里看到这个 

245
00:19:54.778 --> 00:19:56.340
这也是一个很简单的操作 谢谢大家
// 果壳教育无边界字幕组 | ctzsm | 冰之冷  | 小白_远游