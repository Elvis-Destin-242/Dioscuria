WEBVTT

1
00:00:00.012 --> 00:00:05.644
 >> That was our first step. 
 >> Now, we get a lot of these volumes. 

2
00:00:05.644 --> 00:00:12.316
 >> So, we basically go into our 
three-dimensional data, that we got from 

3
00:00:12.316 --> 00:00:16.054
the tomograms. 
 >> We found, so we have the 

4
00:00:16.054 --> 00:00:21.232
three-dimension data. 
 >> We go and look for all the areas 

5
00:00:21.232 --> 00:00:27.198
with the virus, and we segment out those 
spikes, or envelopes. 

6
00:00:27.198 --> 00:00:34.244
 >> Sometimes that's, that done by hand. 
 >> Basically, somebody goes and places 

7
00:00:34.244 --> 00:00:38.646
a box around each one of them. 
 >> Sometimes you can do that 

8
00:00:38.646 --> 00:00:42.910
automatically if you have a model of 
what, more or less, you expect. 

9
00:00:42.910 --> 00:00:46.058
 >> Then you travel around your image 
with that model. 

10
00:00:46.058 --> 00:00:48.447
 >> And you do, a distance at every 
place. 

11
00:00:48.447 --> 00:00:51.093
 >> And if the distance is small, you 
say, oh. 

12
00:00:51.093 --> 00:00:54.128
 >> It looks like there is 1 of these 
envelopes here. 

13
00:00:54.128 --> 00:00:57.953
 >> It's very similar to what we did, we 
did with non local means. 

14
00:00:57.953 --> 00:01:01.502
 >> In non local means, we were looking 
for similar patches. 

15
00:01:01.502 --> 00:01:06.424
 >> Now, the patch is a model that you 
have and with it, you go wrong. 

16
00:01:06.424 --> 00:01:12.328
 >> So, either one of those ways, either 
manual or with this semi-automatic, you 

17
00:01:12.328 --> 00:01:15.674
get this volumes. 
 >> This volumes can be like a 

18
00:01:15.674 --> 00:01:21.897
100x100x100 pixels representing, 
basically, the envelope inside this spike 

19
00:01:21.897 --> 00:01:25.427
that we have. 
 >> Now remember, these are noisy, 

20
00:01:25.427 --> 00:01:29.797
they're not all the same. 
 >> We need to group them, we need to 

21
00:01:29.797 --> 00:01:33.897
align them, and that's what we're 
going to basically do. 

22
00:01:33.897 --> 00:01:38.302
 >> We are going to align them first, 
and there still very noisy. 

23
00:01:38.302 --> 00:01:43.667
 >> So the alignment is not going to be 
great because you're trying to align 

24
00:01:43.667 --> 00:01:48.122
things that are very, very noisy. 
 >> but it's a good step. 

25
00:01:48.122 --> 00:01:52.044
 >> You can actually, only if you want, 
align those that are. 

26
00:01:52.044 --> 00:01:56.675
 >> Basically, it put a very, very high 
threshold and very high level of 

27
00:01:56.675 --> 00:02:00.952
confidence in the alignment. 
 >> And you say I'm going to align them. 

28
00:02:00.952 --> 00:02:05.710
 >> Only those that basically after I 
align, the distance is almost zero. 

29
00:02:05.710 --> 00:02:10.038
 >> They're almost identical. 
 >> So, then I have more confidence that 

30
00:02:10.038 --> 00:02:12.407
I have than. 
 >> Good alignment. 

31
00:02:12.407 --> 00:02:18.222
 >> Once again alignment is you start 
and just rotate them until the distance 

32
00:02:18.222 --> 00:02:23.562
that we show in the previous slides 
becomes the smallest possible. 

33
00:02:23.562 --> 00:02:29.197
 >> Once you have them aligned, then 
classification becomes a bit easier. 

34
00:02:29.197 --> 00:02:32.622
 >> So you say okay now I have them all 
aligned. 

35
00:02:32.622 --> 00:02:37.737
 >> I have them all in a common space. 
 >> Now I want to group them to try to 

36
00:02:37.737 --> 00:02:43.307
only put in the same group those 
envelopes that basically have the same 3 

37
00:02:43.307 --> 00:02:47.298
dimensional shape. 
 >> And there are many ways of doing 

38
00:02:47.298 --> 00:02:51.525
this classification or clustering that we 
need there. 

39
00:02:51.525 --> 00:02:55.019
 >> But let me just illustrate to you 
one example. 

40
00:02:55.019 --> 00:03:00.002
 >> So you have all of them aligned. 
 >> And now you have the distance, the 

41
00:03:00.002 --> 00:03:05.127
distance that basically led you to the 
smallest raw, the smallest alignment 

42
00:03:05.127 --> 00:03:08.027
rotation. 
 >> So you have, you align them, you 

43
00:03:08.027 --> 00:03:11.552
rotate them, you align them, you have the 
distance. 

44
00:03:11.552 --> 00:03:15.042
 >> And now, you basically, how do you 
group them, you. 

45
00:03:15.042 --> 00:03:18.442
 >> Group all of them. 
 >> So you pick one, and you say, hey, 

46
00:03:18.442 --> 00:03:22.467
bring me all my friends. 
 >> Who are my friends? Don't have very 

47
00:03:22.467 --> 00:03:25.017
small distance to me. 
 >> That's 1 group. 

48
00:03:25.017 --> 00:03:29.067
 >> Then you pick another one. 
 >> And say, bring me all my friends. 

49
00:03:29.067 --> 00:03:33.267
 >> And who are the friends? Those that 
I go a very small distance. 

50
00:03:33.267 --> 00:03:36.302
 >> So you basically group them. 
 >> Once you group. 

51
00:03:36.302 --> 00:03:40.478
 >> If you did everything right, you can 
basically average them. 

52
00:03:40.478 --> 00:03:44.021
 >> And we know that the average would 
reduce the noise. 

53
00:03:44.021 --> 00:03:48.197
 >> That's what we taught before. 
 >> We explained when we were doing 

54
00:03:48.197 --> 00:03:51.588
image denoising. 
 >> So you can kind of denoise them a 

55
00:03:51.588 --> 00:03:54.498
tiny bit. 
 >> And after you denoise them a tiny 

56
00:03:54.498 --> 00:03:58.332
bit, you can say, hey, let's try to align 
them again. 

57
00:03:58.332 --> 00:04:00.790
 >> Now, there are a bit more clean 
images. 

58
00:04:00.790 --> 00:04:04.383
 >> So we are going to align them again. 
 >> We are going to cluster again. 

59
00:04:04.383 --> 00:04:08.089
 >> We are going to align them again. 
 >> And we are going to cluster them 

60
00:04:08.089 --> 00:04:10.685
again. 
 >> And you repeat that for a number of 

61
00:04:10.685 --> 00:04:15.263
iterations until you're satisfied. 
 >> Either that things are not changing 

62
00:04:15.263 --> 00:04:18.268
too much. 
 >> Or basically you say, this is the 

63
00:04:18.268 --> 00:04:22.827
best I can do, so I'm going to stick with 
that, and that's a process. 

64
00:04:22.827 --> 00:04:27.495
 >> With the final distance, with 
alignment, clustering, alignment, 

65
00:04:27.495 --> 00:04:32.990
clustering, and the big thing here, once 
again, and we're going to come again and 

66
00:04:32.990 --> 00:04:37.037
again to that, if we have a lot of this 
 >> Small boxes. 

67
00:04:37.037 --> 00:04:44.157
 >> Now, I want to reiterate to you, all 
this is done in three dimensions. 

68
00:04:44.157 --> 00:04:50.052
 >> These 100x100x100 cubes, we have 
like 4,000 of them. 

69
00:04:50.052 --> 00:04:54.012
 >> Sometimes we have 10, 20,000 of 
them. 

70
00:04:54.012 --> 00:04:57.841
 >> So, a lot of computations. 
 >> We need to align everybody with 

71
00:04:57.841 --> 00:05:00.669
everybody. 
 >> We need to compare everybody to 

72
00:05:00.669 --> 00:05:03.816
everybody. 
 >> We need to do that many, many times. 

73
00:05:03.816 --> 00:05:07.766
 >> You can speed up these using 
different, basically, tricks. 

74
00:05:07.766 --> 00:05:11.612
 >> One is for this particular case, 
going to Fourier domain. 

75
00:05:11.612 --> 00:05:16.025
 >> Normally these things are 
implemented in GPU's and, and very, very 

76
00:05:16.025 --> 00:05:21.168
efficient implementations to make them 
run in hours and not in weeks. 

77
00:05:21.168 --> 00:05:25.971
 >> So that's what we have that more 
challenging, the most challenging part, 

78
00:05:25.971 --> 00:05:30.943
computationally is this alignment part 
because we have to basically try all 

79
00:05:30.943 --> 00:05:35.742
these angles, and that's normally done in 
the, in the Fourier domain. 

80
00:05:35.742 --> 00:05:40.862
 >> For these types of examples, as we 
say, because of the missing wedge and 

81
00:05:40.862 --> 00:05:44.812
because of the, the speed. 
 >> Now, you have an algorithm. 

82
00:05:44.812 --> 00:05:49.992
 >> You have, you've developed this 
image processing algorithm, and you're 

83
00:05:49.992 --> 00:05:54.747
going to use it to detect the 
three-dimensional shape of the envelope 

84
00:05:54.747 --> 00:05:59.132
in the HIV virus. 
 >> But then you say to yourself, how do 

85
00:05:59.132 --> 00:06:05.897
I know if my algorithm works? Nobody has 
ever seen the envelope at the resolution 

86
00:06:05.897 --> 00:06:10.477
that I want to see it. 
 >> So, how can I validate? And this is 

87
00:06:10.477 --> 00:06:14.792
very important when you're talking about 
medical. 

88
00:06:14.792 --> 00:06:17.302
 >> Imaging. 
 >> Because you don't want to make 

89
00:06:17.302 --> 00:06:22.107
mistake and mislead, let's say, a 
complete vaccine development because you 

90
00:06:22.107 --> 00:06:25.862
made a computational mistake. 
 >> So, what you do in most image 

91
00:06:25.862 --> 00:06:31.067
processing, but in particular when you're 
talking with medical imaging, is you go 

92
00:06:31.067 --> 00:06:33.392
slow. 
 >> First, you start from what are 

93
00:06:33.392 --> 00:06:37.165
called phantoms. 
 >> You create three dimension shapes 

94
00:06:37.165 --> 00:06:40.834
that look like viruses from your prior 
knowledge. 

95
00:06:40.834 --> 00:06:43.248
 >> You add noise. 
 >> You project them. 

96
00:06:43.248 --> 00:06:47.320
 >> You make missing wedges. 
 >> So you make them like they were 

97
00:06:47.320 --> 00:06:51.966
acquiring the microscope. 
 >> And you run your algorithm for that. 

98
00:06:51.966 --> 00:06:55.603
 >> You know the grand truth, because 
you created it. 

99
00:06:55.603 --> 00:06:57.755
 >> You hope. 
 >> To reconstruct. 

100
00:06:57.755 --> 00:07:01.253
 >> And to you don't finish that, you 
don't move up. 

101
00:07:01.253 --> 00:07:03.906
 >> So, you solve this. 
 >> You say, great. 

102
00:07:03.906 --> 00:07:07.493
 >> I put different structures. 
 >> Phantoms I created. 

103
00:07:07.493 --> 00:07:10.449
 >> I rotate, add noise, add missing 
wedge. 

104
00:07:10.449 --> 00:07:12.453
 >> I got them back. 
 >> I'm happy. 

105
00:07:12.453 --> 00:07:17.982
 >> The next step, because it's almost 
impossible to do a perfect simulation. 

106
00:07:17.982 --> 00:07:23.069
 >> Of everything that is going in the 
microscope, is you take particles that, 

107
00:07:23.069 --> 00:07:28.308
for some reason, we know their structure. 
 >> Maybe because they are larger than 

108
00:07:28.308 --> 00:07:31.370
the HIVs, maybe because they are more 
rigid. 

109
00:07:31.370 --> 00:07:34.939
 >> And they could be acquired with 
other technologies. 

110
00:07:34.939 --> 00:07:39.481
 >> And one of them is what's called the 
GroEL, the GroEL. 

111
00:07:39.481 --> 00:07:45.393
 >> So, you go into your microscope, you 
put GroEL, you run your algorithm. 

112
00:07:45.393 --> 00:07:50.368
 >> You get the 3D shape that everybody 
knows is the right shape. 

113
00:07:50.368 --> 00:07:54.742
 >> You say, okay, this is as much 
validation as I can do. 

114
00:07:54.742 --> 00:07:59.048
 >> Now, I'm ready to do HIV. 
 >> Even here, you can do a lot of 

115
00:07:59.048 --> 00:08:01.372
validation. 
 >> For example. 

116
00:08:01.372 --> 00:08:05.370
 >> You can take these 4000 samples and 
drop 500 of them. 

117
00:08:05.370 --> 00:08:09.884
 >> Do your computations. 
 >> Then drop a different 500 at random. 

118
00:08:09.884 --> 00:08:14.201
 >> Do your computations. 
 >> And you expect to get very similar 

119
00:08:14.201 --> 00:08:17.511
results. 
 >> So, still here you have to do a lot 

120
00:08:17.511 --> 00:08:21.090
of validation. 
 >> But this is a regular progress: 

121
00:08:21.090 --> 00:08:25.152
phantoms, no data, and then you go into 
the unknown. 

122
00:08:25.152 --> 00:08:29.064
 >> Which is the HIV. 
 >> Remember, we are looking for these 

123
00:08:29.064 --> 00:08:33.925
tiny spikes here, and which are, we're 
talking about basically, arms strokes 

124
00:08:34.983 --> 00:08:39.147
that's what basically, the size is that 
we are talking. 

125
00:08:39.147 --> 00:08:44.622
 >> Now, let me reiterate to you why 
this is so important in this schematic. 

126
00:08:44.622 --> 00:08:50.876
 >> These are what we have been seeing, 
let me show that again. 

127
00:08:50.876 --> 00:08:58.606
 >> This is basically a true example 
from this prior tomography, one slice, 

128
00:08:58.606 --> 00:09:05.707
and now, this is a schematic of that. 
 >> Now, as I said, when it goes and 

129
00:09:05.707 --> 00:09:13.697
tries to latch itself into the membrane, 
it actually tries to, basically, grab 

130
00:09:13.697 --> 00:09:18.227
from something, which is called a CD4, 
here. 

131
00:09:18.227 --> 00:09:25.072
 >> And then, the virus has these two. 
 >> Components that are the gp120, 

132
00:09:25.072 --> 00:09:29.972
basically this red, and the gp41, this 
blue. 

133
00:09:29.972 --> 00:09:37.897
 >> And it's like, you know, you could 
think maybe as a flower that is opening 

134
00:09:37.897 --> 00:09:42.535
and then trying to latch. 
 >> Into the CD4. 

135
00:09:42.535 --> 00:09:49.979
 >> And once again, it's very important 
to understand how this confirmation is 

136
00:09:49.979 --> 00:09:56.720
latching, how it's contacting. 
 >> How it's basically managing to grab 

137
00:09:56.720 --> 00:10:02.332
the CD4 and are there any changes 
happening when that's. 

138
00:10:02.332 --> 00:10:05.711
 >> Going on. 
 >> Now, this has been very, very 

139
00:10:05.711 --> 00:10:09.381
elusive. 
 >> It's very, very hard to find, but 

140
00:10:09.381 --> 00:10:14.143
this is the importance. 
 >> Again, we have this schematic. 

141
00:10:14.143 --> 00:10:20.047
 >> This latching, this contact, is 
critical for the virus to go into the 

142
00:10:20.047 --> 00:10:23.832
host cell. 
 >> So that's a very important step. 

143
00:10:23.832 --> 00:10:27.172
 >> Here. 
 >> And we work, if I was lucky to work 

144
00:10:27.172 --> 00:10:32.557
on this with people at NIH, at the 
National Institute of Health. 

145
00:10:32.557 --> 00:10:38.227
 >> And I'm going to show you some 
results of these, and much more research 

146
00:10:38.227 --> 00:10:43.392
has been done on this area. 
 >> But this is important and enough 

147
00:10:43.392 --> 00:10:47.892
 >> To illustrate the example for this 
image processing class. 

148
00:10:47.892 --> 00:10:53.392
 >> And normally, what you do, is, you 
basically have the virus in different 

149
00:10:53.392 --> 00:10:56.557
states. 
 >> And then you try to look at this 3D 

150
00:10:56.557 --> 00:11:01.337
shape in different states. 
 >> And for the particular examples I'm 

151
00:11:01.337 --> 00:11:04.504
going to show to you. 
 >> We have 400 viruses. 

152
00:11:04.504 --> 00:11:10.107
 >> From them, we got 4,000 of these 
spikes and envelopes under different 

153
00:11:10.107 --> 00:11:13.699
states. 
 >> So, what's called unliganded with a 

154
00:11:13.699 --> 00:11:17.432
b12 complex and with other eh, eh, 
complexes. 

155
00:11:17.432 --> 00:11:22.373
 >> So, just different states. 
 >> We want to concentrate on the image 

156
00:11:22.373 --> 00:11:26.607
processing part. 
 >> This is what you see, this is your 

157
00:11:26.607 --> 00:11:29.762
raw data. 
 >> You put the virus, you did the 

158
00:11:29.762 --> 00:11:36.487
cryotomography, you basically put all the 
tiles together, this is what you see, and 

159
00:11:36.487 --> 00:11:40.102
you say, oh boy, what am I going to do 
with that? 

160
00:11:40.102 --> 00:11:45.914
 >> But, you remember that you just 
developed an algorithm that is working 

161
00:11:45.914 --> 00:11:49.977
for other things. 
 >> So you plug your algorithm into 

162
00:11:49.977 --> 00:11:53.389
that. 
 >> You start, you find the envelopes, 

163
00:11:53.389 --> 00:11:59.102
you do the alignment, classification, 
alignment classification. 

164
00:11:59.102 --> 00:12:04.138
 >> And then, you start seeing progress. 
 >> You start from basically, this is 

165
00:12:04.138 --> 00:12:07.548
kind of the very beginning. 
 >> Nothing looks okay. 

166
00:12:07.548 --> 00:12:12.297
 >> If you align things which are 
completely non, if you average things 

167
00:12:12.297 --> 00:12:16.181
which are completely non-aligned, you 
just get balls. 

168
00:12:16.181 --> 00:12:20.352
 >> You know, it just, everything going 
in every direction. 

169
00:12:20.352 --> 00:12:25.232
 >> Then things start getting better, 
better, better, better, better, better. 

170
00:12:25.232 --> 00:12:29.857
 >> You're, things start to appear, and, 
you know, you start seeing shapes. 

171
00:12:29.857 --> 00:12:34.552
 >> You didn't see anything, and after 
iterations, you start seeing shape. 

172
00:12:34.552 --> 00:12:40.481
 >> Because you're progressively 
improving your alignment, improving your 

173
00:12:40.481 --> 00:12:47.070
classification, and then we know that if 
we average things that are the same, the 

174
00:12:47.070 --> 00:12:52.020
noise goes down and then we can get the 
shapes that we wanted. 

175
00:12:52.020 --> 00:12:56.812
 >> So we go from this, which kind of 
has it there, so we can see 

176
00:12:56.812 --> 00:13:00.156
 >> Them here. 
 >> And that's where you go and you 

177
00:13:00.156 --> 00:13:05.941
either automatically manually as we say, 
you pick all these particles. 

178
00:13:05.941 --> 00:13:09.326
 >> And then you can get your 
reconstruction. 

179
00:13:09.326 --> 00:13:13.172
 >> this is actually obtained from the 
tomography. 

180
00:13:13.172 --> 00:13:17.319
 >> And what we really want, so we are 
starting to see the 3D. 

181
00:13:17.319 --> 00:13:21.687
 >> This is just one of these. 
 >> It doesn't have to be exactly this 

182
00:13:21.687 --> 00:13:25.695
one, but it's one of them. 
 >> You see that, and you see the 

183
00:13:25.695 --> 00:13:28.847
envelopes. 
 >> And basically, you average and 

184
00:13:28.847 --> 00:13:33.657
classify those envelopes. 
 >> And here is what you see. 

185
00:13:33.657 --> 00:13:38.952
 >> You have the membrane that you were 
expecting. 

186
00:13:38.952 --> 00:13:42.947
 >> And, I'm going to just run this 
video. 

187
00:13:42.947 --> 00:13:48.012
 >> And this is the shape. 
 >> This is the envelope. 

188
00:13:48.012 --> 00:13:52.081
 >> That you were looking for. 
 >> And then you tried to fit pieces 

189
00:13:52.081 --> 00:13:56.949
that, for all the reasons are known, and 
you see, oh, this is one of my 

190
00:13:56.949 --> 00:14:00.294
validations. 
 >> Nobody has seen this in its entire 

191
00:14:00.294 --> 00:14:03.664
composition, but they have seen pieces of 
them. 

192
00:14:03.664 --> 00:14:09.480
 >> So let's just try to bring them. 
 >> And see if we can basically fit them 

193
00:14:09.480 --> 00:14:13.874
properly. 
 >> So this, is the envelopes that you 

194
00:14:13.874 --> 00:14:18.206
see here. 
 >> How you go from here to here? Smart 

195
00:14:18.206 --> 00:14:22.572
image processing. 
 >> Once you have done that, you can 

196
00:14:22.572 --> 00:14:28.802
start doing the biology, and this is what 
the people from biology teach us, that is 

197
00:14:28.802 --> 00:14:32.757
the important part. 
 >> Why are we doing this? We cannot 

198
00:14:32.757 --> 00:14:38.987
explain, because now, I can look at the 
HIV envelope, under different states, and 

199
00:14:38.987 --> 00:14:42.732
basically see that their shapes are 
different. 

200
00:14:42.732 --> 00:14:48.312
 >> Under different states, and then you 
can start making biological conclusions 

201
00:14:48.312 --> 00:14:51.712
about that. 
 >> And say under certain confirmation 

202
00:14:51.712 --> 00:14:57.687
this is what happen under different state 
when it's actually latching into the CD4. 

203
00:14:57.687 --> 00:15:01.667
 >> It's changing shape. 
 >> And that's extremely important for 

204
00:15:01.667 --> 00:15:06.215
the vaccine development people. 
 >> And then the interaction starts, and 

205
00:15:06.215 --> 00:15:11.702
then they ask you more image processing 
questions and then you try to address 

206
00:15:11.702 --> 00:15:14.231
that. 
 >> And that's what we basically is, 

207
00:15:14.231 --> 00:15:19.527
illustrate here with this schematic, that 
basically there is a change in shape, a 

208
00:15:19.527 --> 00:15:23.236
change in conformation. 
 >> When there is CD4 binding. 

209
00:15:23.236 --> 00:15:28.638
 >> And that's what we illustrate here 
with this change in the arms, kind of an 

210
00:15:28.638 --> 00:15:31.430
open. 
 >> you can see these with image 

211
00:15:31.430 --> 00:15:34.664
processing. 
 >> You couldn't see that with your 

212
00:15:34.664 --> 00:15:37.784
naked eye. 
 >> This is 1 of the really exciting 

213
00:15:37.784 --> 00:15:43.912
areas, where image processing actually 
helps you see something you couldn't see. 

214
00:15:43.912 --> 00:15:47.078
 >> Before. 
 >> When we talked, for example, about 

215
00:15:47.078 --> 00:15:52.936
activity classification, that was to do 
in the computer something that the human 

216
00:15:52.936 --> 00:15:56.395
knows how to do. 
 >> Here is to do something that the 

217
00:15:56.395 --> 00:16:00.259
human cannot do. 
 >> We cannot see the 3D shape just from 

218
00:16:00.259 --> 00:16:05.020
those projections or from those 
tomography 3D reconstructions. 

219
00:16:05.020 --> 00:16:07.751
 >> We need to do this. 
 >> Image processing. 

220
00:16:07.751 --> 00:16:12.546
 >> I hope you had fun, this is an 
exciting area, and this is just the tip 

221
00:16:12.546 --> 00:16:18.056
of the iceberg of research in image 
processing, and viruses, and microscopy. 

222
00:16:18.056 --> 00:16:23.096
 >> But it's an illustrative example 
about the power of image processing to 

223
00:16:23.096 --> 00:16:24.695
solve. 
 >> Real progress. 

224
00:16:24.695 --> 00:16:27.032
 >> We're going to see more in the next 
video. 

225
00:16:27.032 --> 00:16:29.753
 >> Looking forward to seeing you then. 
 >> Thank you. 