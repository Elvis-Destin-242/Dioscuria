大家好 欢迎回到我们的图像与视频处理课程上来 这是课程的第二周 我们将要讨论图像和视频的压缩 这或许是图像和视频处理中最成功的领域之一了 压缩技术是一种使能技术 它的应用非常广泛 正如我们将要见到的那样 如果你有一些 信息论或者信号处理的基础知识 这一单元中的一些话题对你而言会很简单 但是如果你没有相应的基础 也不必担心 因为这一单元相对独立 我也会 教你所需要的这些领域的相关概念 包括信息论和信号处理 这样我们就可以理解 图像压缩 静态图像压缩(JPEG) 动态图像压缩(MPEG) 等技术是如何工作的 作为开始 让我们看看为什么我们需要图像压缩 这解释起来并不困难 让我们算几个数字 假设我们有一张分辨率为1000 x 1000的图片 我们知道 以现在的标准 这是一张 低分辨率的图像 但是我们就用它吧 计算上方便些 假设我们需要8比特 正如一般标准规定的那样 用8比特来表示每一种颜色 也就意味着我们每个像素需要24个比特 所以我们得到了一个数组 大小为1000 x 1000 再乘以用来表示三种颜色的24比特 这是针对一张图像的计算 如果我们是计算视频的话 这只是一帧而已 我们实际上需要30张这样的图像来得到 一秒钟的视频 然后我们把60个这样的视频加起来得到一分钟的视频 然后我们再将它乘以120得到一部两个小时的 电影 所以这个式子的结果是多少？ 结果是一个非常大的数字 非常非常大 你可以自己算一下 但是你会同意这个结论的 一张低分辨率的图像就会产生很大的结果 所以哪怕我们只有一张照片 我们仍然有一个很大的结果 如果没有压缩的话 我们不可能把一大堆这样的照片 存入我们的手机或者电脑中 所以当我们开始讨论图像和视频的时候 我们马上 就遇到了很大很大的数字 这就是我们需要图像压缩的原因 我们需要储存这些图像和视频 而不必在我们的手机或电脑中占据大量的空间 这就是我们需要图像和视频压缩的一个原因 问题是 为什么我们可以压缩图像和视频？ 这有许多原因 我们将会讨论它们 其中一个原因通常被称为冗余 这是我们首要的关注点之一 不是每个像素值都是相等的 有的像素值出现的多些 有的则 出现的少些 正如我们在这张图中见到的 许多像素值被用来表示这个星星 一小部分用来表示 这些白线 而表示某些特定颜色的像素值几乎没有 所以我们可以看到这张图里有一、二、三、四 四种颜色 如果用8比特来表示 也就是用256种可能性来表示4种颜色 这是一种浪费 所以我们将要利用这一点 还有一个原因使得我们可以进行压缩 还是关于大量的冗余 这点在这张图上表现的很直观 让我们假设其中一条线的灰度值为常数 举个例子 就等于128好了 想象一下这条线非常的长 比如说10000个像素那么长 所以至少有两种 极端的方法来表示这条线 一种是把128重复10000次
在 4 分 20 秒处开始记录4:20
这会花掉10000字节也就是10000乘以8比特 我们要128 128 128 128 这样重复10000次 看起来非常浪费 或者换一种办法 我从这开始 有10000个128 也就是说我给出了一个数字 用来说明 我要重复128次 这样用来存储的记忆空间就会小得多了 我只要存储像素值128 以及其出现的次数10000 相比保存128这个值10000次 只保存这两个数字无疑节省了非常多的空间 这是一个极端的例子 但是非常重要 它在有均匀区域或者几何一致性的图像中经常出现 我们可以利用这一点来进行压缩 这就是我们能进行压缩的第二个原因 顺便说一句 这对视频压缩一样适用 我们能进行压缩的第三个原因就在这儿 这是一张纯色图像 灰度值为常数 这张图里有非常多的无关信息 这里有大量的我们并不关心的信息会被存储 或者说我们并不介意这些信息被存储时会有些许的不同 比如说 如果这个值是128 我并不介意它被说成是127 有可能我对这个值一点都不关心 我可能不关心它的精确值是多少 可能不太关心 这些信息 所以这里有大量的无用信息 无关信息 以上就是我们能进行压缩的三个原因 我们将利用所有这些原因 然后我们就能实现很大程度的压缩
在 6 分 16 秒处开始记录6:16
教材上有许多压缩的方法 其中一部分 成功的图像压缩方法最终成为了标准 这非常重要 因为当我在我的数码相机中保存了一张图像时 我希望所有的电脑都能读取它 我想通过电子邮件把这张图片分享给我的朋友和同事 希望他们能够读取它 所以我存储照片的方式必须 与其他人读取它的方式兼容 这就是有如此多的压缩标准的原因 对于静态图像 这是最普遍的三种标准 当然 你应该对JPEG 有所了解 JPEG被大多数相机所采用 而且我们将会在接下来的视频里 讨论很多与图像处理和图像压缩有关的知识 这有一个标准称为JPEG-LS 是一种无损压缩 所以你所见的都会被压缩 在这种情况下 没有不相关的信息 所有的信息都会被压缩 这儿还有个新标准JPEG-2000 我们将重点讨论JPEG和JPEG-LS 对于视频而言也有相应的标准 再说一次 当我拍摄了一段视频 保存到我手机里然后发送给朋友 我希望他们能够读取它 为了能读取 他们需要知道我是如何进行压缩的 当然了 最常见的压缩标准就是MPEG家族 虽然这里还列出了其它的压缩技术 这两个标准有些相辅相成的味道 它们在图像和视频压缩上是如此成功 以至于被制定成了标准 这使得所有人都在用着同样的技术 而所有人用着 同样的技术这件事反过来也使得它非常的成功和普及 如今数码相机制造商可以充满信心地 使用JPEG 因为他们知道所有人都能够读取这种格式 这就是为什么他们能如此安心地使用JPEG 一般的图像压缩技术都会利用到 我在前几页幻灯片中提及的图像的各种性质 它们的原理是这样的 从一张图像开始 经过一个映射器 (mapper) 也就是我们 把上周讲到的数组 比如说它有1000乘1000个点 进行了变换使得其更容易被压缩 我们来讨论下这些映射变换 有些映射变换 与傅里叶变换相关 实际上也就是是一个余弦变换 一些映射变换是发生在空间域上 依据相邻的像素进行变换 我们将会对此进行讨论 在映射变换之后 图像在空间上变得易于压缩 然后下一步就是量化 我们已经说过了量化 量化是引入错误的主要原因 它引进了一些易于压缩的东西 但是也限制了 对图像的精确重构 比如说 可能有一个像素 它的值为17 而量化技术或许会 将这个值除以2 然后再取整 得到最接近的不大于该值的整数之后再乘2 这是我们上回讲到的 所以我们这里会以重构结束 我们重构得到的值为16而不是17 所以量化会引入误差 我们将描述一些最好的量化技术 实际上JPEG所用的量化技术就是我写在这的这种 最后一个步骤是利用符号编码器编码 现在我已经完成了映射变换 也完成了量化 现在我们已经有了一些数值 我需要的是把它们 传输出去 我希望另一边的接收器 能够得到准确的值 这儿信息论 就起到了作用 因为信息论告诉我们如何使这一切 在计算时间和压缩效率上都变得更有效率 从使用更频繁的某些像素值的角度出发 信息论能够 利用存在于图像中的冗余 我们将从这一点开始 现在我需要对图像做的处理都已经完成了 我希望你存储或者传输这些像素 然后一旦你压缩了图像 你就得到了一个压缩过的文件 这就是编码器 它获取图像然后 压缩它 而解码器会将其解码 解码器并不会进行量化 因为量化和编码都已经做过了 解码器可能只是进行逆运算 比如说 重新乘上2 然后进行逆映射变换 就可以得到图像 如果是没有误差的无损压缩的话 那么图像是完好无损的 或者说只是一个原图的近似品 一般而言这个近似品 我们裸眼无法分辨出与原图的不同之处 那样的话这就是一个好的近似 像JPEG和MEPG一样 这就是全部的步骤了 这也解释了为什么我们需要标准 如果我用了某种映射变换 解码器需要 知道这个映射变换 然后才能进行逆运算 我还需要告诉 解码器我所用的符号编码方法 这样解码器才能 逆运算得到符号编码 JPEG就是这样一个例子 正如我所说 我们将介绍JPEG的工作原理 JPEG首先得到一张图片 然后把它分割成小图片 也就是说 它把一张完整的图像分割成一块一块 这种块是8乘8像素的 我们将会知道为什么这样 然后就是进行变换 这就是我们刚说过的映射变换 在这儿 这个变换是 离散余弦变换 (Discrete Cosine Transform) 我们会详细地讨论它 给出相关的公式 并解释为什么使用它 JPEG采用的量化方式也是我刚才提到的那种 JPEG会将值除以某个数然后取整 不同的除数会产生不同的版本 我们也将对此作出解释 完成这些之后 就要进行符号编码 也就是霍夫曼编码 我们会解释它的 这就是JPEG的全部流程 在这个单元结束后 我会给你一个可选的作业 就是在你自己的电脑上实现JPEG 你会发现这并不那么困难 这种算法的成功一部分也得益于此 解码器会对其进行解码 运用离散余弦变换的逆变换 它把这些块一个挨着一个摆放 然后显示图像 到这儿我们只完成了一种颜色的处理 我们还将讨论 不同颜色 例如是如何处理RGB的 通过利用不同颜色间的冗余 我们实际上 可以进一步地压缩 JPEG只是 这种压缩技术原型的一个实例 这个原型包括映射变换这个部分 量化 以及符号编码器 所以JPEG是这种技术一个非常成功的实例 我想是时候前进了 让我们来讨论这每一个步骤吧 谢谢 // 教育无边界字幕组 | 风过成伤 | luoyetx | zeadoit 谢谢 // 果壳教育无边界字幕组 | 风过成伤 | luoyetx | zeadoit